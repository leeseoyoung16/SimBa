{"version":3,"file":"static/js/454.a560a64e.chunk.js","mappings":"6JAKe,SAASA,IAAS,IAADC,EAC9B,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAE7BO,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,QAAEC,GAA8B,QAArBd,GAAGe,EAAAA,EAAAA,aAAkB,IAAAf,EAAAA,EAAI,CAAC,EAErCgB,EAAO,IAAIC,gBAAgBL,EAASM,QAAQC,IAAI,SAAW,IA6BjE,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAOG,KAAK,MAAM,aAAW,OAAMF,SAAC,UAEnDC,EAAAA,EAAAA,MAAA,QAAME,SAhCQC,UAElB,GADAC,EAAEC,kBACEtB,EAAJ,CACAG,EAAS,IAET,IACEF,GAAW,SAGLsB,EAAAA,GAAAA,KAAS,mBAAoB,CACjCC,SAAU7B,EACVG,aAIF,MAAM2B,QAAWF,EAAAA,GAAAA,IAAQ,YAClB,OAAPf,QAAO,IAAPA,GAAAA,EAAUiB,EAAGC,MAEbtB,EAASM,EAAM,CAAEiB,SAAS,GAC5B,CAAE,MAAOC,GAAM,IAADC,EAAAC,EACZ,MAAMC,GAAS,OAAHH,QAAG,IAAHA,GAAa,QAAVC,EAAHD,EAAKI,gBAAQ,IAAAH,GAAM,QAANC,EAAbD,EAAeH,YAAI,IAAAI,OAAhB,EAAHA,EAAqBG,UAAW,iEAC5C9B,EAAS4B,EACX,CAAC,QACC9B,GAAW,EACb,CAtBmB,GA8Bcc,UAAU,aAAYC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,SACEoB,KAAK,OACLC,YAAY,sDACZC,MAAOzC,EACP0C,SAAWhB,GAAMzB,EAAWyB,EAAEiB,OAAOF,OACrCG,aAAa,WACbC,UAAQ,KAEV1B,EAAAA,EAAAA,KAAA,SACEoB,KAAK,WACLC,YAAY,2BACZC,MAAOtC,EACPuC,SAAWhB,GAAMtB,EAAYsB,EAAEiB,OAAOF,OACtCG,aAAa,mBACbC,UAAQ,IAGTtC,IAASY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SAAEd,KAEvCe,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAASnB,UAAU,YAAY0B,SAAUzC,EAAQgB,SAC3DhB,EAAU,+BAAa,wBAE1Bc,EAAAA,EAAAA,KAAA,UACEoB,KAAK,SACLnB,UAAU,WACV2B,QAASA,IAAMtC,EAAS,kBAAoBuC,mBAAmBjC,IAC/D+B,SAAUzC,EAAQgB,SACnB,uCAQb,CClFe,SAAS4B,IACtB,OACE9B,EAAAA,EAAAA,KAAA,OAAK,WAAS,MAAKE,UACjBC,EAAAA,EAAAA,MAAC4B,EAAAA,GAAM,CAAA7B,SAAA,EACLF,EAAAA,EAAAA,KAACgC,EAAAA,GAAK,CAACC,OAAK,EAACC,SAASlC,EAAAA,EAAAA,KAACmC,EAAK,OAC5BnC,EAAAA,EAAAA,KAACgC,EAAAA,GAAK,CAACI,KAAK,IAAIF,SAASlC,EAAAA,EAAAA,KAACqC,EAAAA,GAAQ,CAACC,GAAG,IAAIzB,SAAO,UAIzD,C","sources":["features/logIn/LogIn.js","features/logIn/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation, useOutletContext } from \"react-router-dom\";\r\nimport api from \"../../api\"; // 경로 확인 필요\r\nimport \"./LogIn.css\";\r\n\r\nexport default function Login() {\r\n  const [account, setAccount] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [pending, setPending] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { setUser } = useOutletContext() ?? {}; // AppLayout: <Outlet context={{ user, setUser }} />\r\n\r\n  const next = new URLSearchParams(location.search).get(\"next\") || \"/\";\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (pending) return;\r\n    setError(\"\");\r\n\r\n    try {\r\n      setPending(true);\r\n\r\n      // 서버 필드명이 account/email 이면 username 키만 바꿔주세요.\r\n      await api.post(\"/itda/auth/login\", {\r\n        username: account,\r\n        password,\r\n      });\r\n\r\n      // 로그인 직후 me 조회해서 상단/컨텍스트 갱신\r\n      const me = await api.get(\"/itda/me\");\r\n      setUser?.(me.data);\r\n\r\n      navigate(next, { replace: true });\r\n    } catch (err) {\r\n      const msg = err?.response?.data?.message || \"로그인에 실패했습니다.\";\r\n      setError(msg);\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth auth-login\">\r\n      <div className=\"container\">\r\n        <div className=\"logo\" role=\"img\" aria-label=\"Itda\">Itda</div>\r\n\r\n        <form onSubmit={handleLogin} className=\"login-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"아이디(또는 이메일)\"\r\n            value={account}\r\n            onChange={(e) => setAccount(e.target.value)}\r\n            autoComplete=\"username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n            required\r\n          />\r\n\r\n          {error && <div className=\"form-error\">{error}</div>}\r\n\r\n          <div className=\"links\">\r\n            <button type=\"submit\" className=\"login-btn\" disabled={pending}>\r\n              {pending ? \"로그인 중...\" : \"로그인\"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"link-btn\"\r\n              onClick={() => navigate(\"/register?next=\" + encodeURIComponent(next))}\r\n              disabled={pending}\r\n            >\r\n              회원가입\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// features/map/index.jsx\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport LogIn from \"./LogIn\";\r\n\r\nexport default function MapFeature() {\r\n  return (\r\n    <div data-app=\"map\">\r\n      <Routes>\r\n        <Route index element={<LogIn />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Login","_useOutletContext","account","setAccount","useState","password","setPassword","pending","setPending","error","setError","navigate","useNavigate","location","useLocation","setUser","useOutletContext","next","URLSearchParams","search","get","_jsx","className","children","_jsxs","role","onSubmit","async","e","preventDefault","api","username","me","data","replace","err","_err$response","_err$response$data","msg","response","message","type","placeholder","value","onChange","target","autoComplete","required","disabled","onClick","encodeURIComponent","MapFeature","Routes","Route","index","element","LogIn","path","Navigate","to"],"sourceRoot":""}