{"version":3,"file":"static/js/4.1b77cde8.chunk.js","mappings":"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","sources":["features/createReviewEvent/Date/datePick.js","features/createReviewEvent/Reward/rewardCount.js","features/createReviewEvent/SelectShop/Select.js","features/createReviewEvent/EventPoaster/EventPoaster.js","features/createReviewEvent/EventTitle/EventTitle.js","features/createReviewEvent/EventContents/EventContent.js","features/createReviewEvent/CreateButton/CreateButton.js","features/createReviewEvent/Reward/rewardContent.js","features/createReviewEvent/CreateReviewEvent.js","features/createReviewEvent/index.js"],"sourcesContent":["// src/features/createReviewEvent/Date/datePick.jsx\r\nimport React, { useState } from \"react\";\r\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport { startOfDay, isBefore, isSameDay } from \"date-fns\";\r\nimport \"./datePickerStyle.css\";\r\n\r\nregisterLocale(\"ko\", ko);\r\nsetDefaultLocale(\"ko\");\r\n\r\nconst pad2 = (n) => String(n).padStart(2, \"0\");\r\n\r\n// 보기용: yyyy-MM-dd HH:mm\r\nconst toLocalMinuteSQL = (d) =>\r\n  d instanceof Date && !isNaN(d?.valueOf())\r\n    ? `${d.getFullYear()}-${pad2(d.getMonth() + 1)}-${pad2(d.getDate())} ${pad2(\r\n        d.getHours()\r\n      )}:${pad2(d.getMinutes())}`\r\n    : \"\";\r\n\r\n// 서버 전송용: yyyy-MM-dd'T'HH:mm:ss.SSS (LocalDateTime 호환)\r\nconst toLocalDateTimeString = (d) => {\r\n  if (!(d instanceof Date) || isNaN(d?.valueOf())) return \"\";\r\n  return (\r\n    d.getFullYear() +\r\n    \"-\" +\r\n    pad2(d.getMonth() + 1) +\r\n    \"-\" +\r\n    pad2(d.getDate()) +\r\n    \"T\" +\r\n    pad2(d.getHours()) +\r\n    \":\" +\r\n    pad2(d.getMinutes()) +\r\n    \":\" +\r\n    pad2(d.getSeconds()) +\r\n    \".000\"\r\n  );\r\n};\r\n\r\nfunction DatePick() {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const today = startOfDay(new Date());\r\n  const now = new Date();\r\n\r\n  const isValidDate = (d) => d instanceof Date && !isNaN(d?.valueOf());\r\n\r\n  const writeHidden = (id, value) => {\r\n    const el = document.getElementById(id);\r\n    if (el) el.value = value ?? \"\";\r\n  };\r\n\r\n  const writeBoth = (baseId, date) => {\r\n    // 서버 전송용(LocalDateTime) / 보기용 둘 다 기록\r\n    writeHidden(`${baseId}-at`, toLocalDateTimeString(date));\r\n    writeHidden(baseId, toLocalMinuteSQL(date));\r\n  };\r\n\r\n  const handleStartChange = (date) => {\r\n    if (!isValidDate(date)) {\r\n      setStartDate(null);\r\n      writeBoth(\"event-start\", null);\r\n      return;\r\n    }\r\n\r\n    const nextStart = isBefore(date, today) ? today : date;\r\n\r\n    if (endDate && isBefore(endDate, nextStart)) {\r\n      setEndDate(nextStart);\r\n      writeBoth(\"event-end\", nextStart);\r\n    }\r\n\r\n    setStartDate(nextStart);\r\n    writeBoth(\"event-start\", nextStart);\r\n  };\r\n\r\n  const handleEndChange = (date) => {\r\n    if (!isValidDate(date)) {\r\n      setEndDate(null);\r\n      writeBoth(\"event-end\", null);\r\n      return;\r\n    }\r\n\r\n    const baseStart = startDate || today;\r\n    const nextEnd = isBefore(date, baseStart) ? baseStart : date;\r\n\r\n    setEndDate(nextEnd);\r\n    writeBoth(\"event-end\", nextEnd);\r\n  };\r\n\r\n  const endMinDate = startDate || today;\r\n\r\n  // ---- 시간 경계 계산 ----\r\n  const startHasBounds = isValidDate(startDate) && isSameDay(startDate, today);\r\n  const startMinTimeProp = startHasBounds ? now : undefined;\r\n  const startMaxTimeProp = startHasBounds\r\n    ? new Date(1970, 0, 1, 23, 59, 59, 999)\r\n    : undefined;\r\n\r\n  const endSameDayAsStart =\r\n    isValidDate(endDate) &&\r\n    isValidDate(startDate) &&\r\n    isSameDay(endDate, startDate);\r\n  const endIsToday = isValidDate(endDate) && isSameDay(endDate, today);\r\n\r\n  let endMinTimeProp, endMaxTimeProp;\r\n  if (endSameDayAsStart) {\r\n    endMinTimeProp = startDate;\r\n    endMaxTimeProp = new Date(1970, 0, 1, 23, 59, 59, 999);\r\n  } else if (endIsToday) {\r\n    endMinTimeProp = now;\r\n    endMaxTimeProp = new Date(1970, 0, 1, 23, 59, 59, 999);\r\n  } else {\r\n    endMinTimeProp = undefined;\r\n    endMaxTimeProp = undefined;\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-fix\">\r\n      {/* hidden 값: -at(서버 전송용 LocalDateTime 문자열) / 기본(보기 문자열) */}\r\n      <input type=\"hidden\" id=\"event-start-at\" />\r\n      <input type=\"hidden\" id=\"event-end-at\" />\r\n      <input type=\"hidden\" id=\"event-start\" />\r\n      <input type=\"hidden\" id=\"event-end\" />\r\n\r\n      <div className=\"date-row\">\r\n        <DatePicker\r\n          className=\"date-input\"\r\n          placeholderText=\"Select Start Date\"\r\n          locale=\"ko\"\r\n          showTimeSelect\r\n          timeIntervals={1}\r\n          dateFormat=\"yyyy/MM/dd HH:mm\"\r\n          selected={startDate}\r\n          selectsStart\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          minDate={today}\r\n          minTime={startMinTimeProp}\r\n          maxTime={startMaxTimeProp}\r\n          onChange={handleStartChange}\r\n          withPortal\r\n          popperPlacement=\"bottom-start\"\r\n          aria-label=\"시작 날짜\"\r\n        />\r\n        &nbsp;~&nbsp;\r\n        <DatePicker\r\n          className=\"date-input\"\r\n          placeholderText=\"Select End Date\"\r\n          locale=\"ko\"\r\n          showTimeSelect\r\n          timeIntervals={1}\r\n          dateFormat=\"yyyy/MM/dd HH:mm\"\r\n          selected={endDate}\r\n          selectsEnd\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          minDate={endMinDate}\r\n          minTime={endMinTimeProp}\r\n          maxTime={endMaxTimeProp}\r\n          onChange={handleEndChange}\r\n          withPortal\r\n          popperPlacement=\"bottom-start\"\r\n          aria-label=\"종료 날짜\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatePick;\r\n","import React, { useState } from \"react\";\r\nimport \"./rewardCountStyle.css\";\r\n\r\nfunction RewardCount() {\r\n  // 문자열로 관리하면 placeholder(빈 값) 처리와 컨트롤드 input 유지가 쉬워요\r\n  const [count, setCount] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const raw = e.target.value;\r\n    if (raw === \"\") {\r\n      setCount(\"\"); // placeholder 상태 유지\r\n      return;\r\n    }\r\n    // 숫자 정규화: 음수/소수/NaN 방지, 정수로 고정\r\n    const n = Math.max(0, Math.floor(Number(raw)));\r\n    setCount(String(n));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ✅ 서버 전송용 백업(버튼에서 읽음) */}\r\n      <input\r\n        type=\"hidden\"\r\n        id=\"event-reward-count\"\r\n        value={count}\r\n        readOnly\r\n      />\r\n\r\n      <input\r\n        type=\"number\"\r\n        className={`reward-input ${count === \"\" ? \"is-placeholder\" : \"\"}`}\r\n        placeholder=\"보상 수량\"\r\n        value={count}\r\n        onChange={handleChange}\r\n        min={0}\r\n        step={1}\r\n        inputMode=\"numeric\"\r\n        pattern=\"[0-9]*\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RewardCount;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport \"./SelectStyle.css\";\r\nimport api from \"../../../api\"; // 경로는 실제 구조에 맞게\r\n\r\nfunction SelectShop({ onSelect }) {\r\n  const [selectedId, setSelectedId] = useState(\"\"); // \"\" | string\r\n  const [stores, setStores] = useState([]);         // [{id, name, latitude, longitude, ...}]\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      try {\r\n        const { data } = await api.get(\"/itda/me/stores\");\r\n        const list = Array.isArray(data) ? data : data?.items || [];\r\n\r\n        // ✅ 서버 응답 필드명이 제각각일 수 있으므로 여기서 통일\r\n        const normalized = list.map((raw) => {\r\n          const id =\r\n            raw?.id ??\r\n            raw?.storeId ??\r\n            raw?.store?.id;\r\n\r\n          const name =\r\n            raw?.name ??\r\n            raw?.storeName ??\r\n            raw?.store?.name ??\r\n            raw?.shopName ??\r\n            raw?.title ??\r\n            (id != null ? `매장#${id}` : \"이름 없음\");\r\n\r\n          // 위도/경도 보강 (문자열이면 숫자로, 대체 키도 고려)\r\n          const latRaw = raw?.latitude ?? raw?.lat ?? raw?.store?.latitude;\r\n          const lngRaw = raw?.longitude ?? raw?.lng ?? raw?.store?.longitude;\r\n          const latitude =\r\n            typeof latRaw === \"string\" ? Number(latRaw) : latRaw;\r\n          const longitude =\r\n            typeof lngRaw === \"string\" ? Number(lngRaw) : lngRaw;\r\n\r\n          return {\r\n            ...raw,\r\n            id,\r\n            name,\r\n            latitude,\r\n            longitude,\r\n          };\r\n        });\r\n\r\n        if (mounted) setStores(normalized);\r\n      } catch (e) {\r\n        if (mounted) {\r\n          setError(\"매장 목록을 불러오지 못했습니다.\");\r\n          setStores([]);\r\n        }\r\n      } finally {\r\n        if (mounted) setLoading(false);\r\n      }\r\n    })();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const selectedStore = useMemo(\r\n    () => stores.find((s) => String(s.id) === String(selectedId)),\r\n    [stores, selectedId]\r\n  );\r\n\r\n  // ✅ 선택 시 hidden input & 콜백 세팅\r\n  useEffect(() => {\r\n    const storeIdInput = document.getElementById(\"event-store-id\");\r\n    const shopInput = document.getElementById(\"event-shop\");\r\n    const latInput = document.getElementById(\"event-lat\");\r\n    const lngInput = document.getElementById(\"event-lng\");\r\n    const addrInput = document.getElementById(\"event-address\");\r\n\r\n    if (selectedStore) {\r\n      storeIdInput && (storeIdInput.value = String(selectedStore.id));\r\n      shopInput && (shopInput.value = selectedStore.name ?? \"\");\r\n      latInput && (latInput.value = selectedStore.latitude ?? \"\");\r\n      lngInput && (lngInput.value = selectedStore.longitude ?? \"\");\r\n      addrInput && (addrInput.value = \"\");\r\n\r\n      typeof onSelect === \"function\" &&\r\n        onSelect({\r\n          id: selectedStore.id,\r\n          name: selectedStore.name,\r\n          latitude: selectedStore.latitude,\r\n          longitude: selectedStore.longitude,\r\n          category: selectedStore.category,\r\n          description: selectedStore.description,\r\n        });\r\n    } else {\r\n      storeIdInput && (storeIdInput.value = \"\");\r\n      shopInput && (shopInput.value = \"\");\r\n      latInput && (latInput.value = \"\");\r\n      lngInput && (lngInput.value = \"\");\r\n      addrInput && (addrInput.value = \"\");\r\n    }\r\n  }, [selectedStore, onSelect]);\r\n\r\n  const hasStores = stores.length > 0;\r\n\r\n  const handleChange = (e) => {\r\n    setSelectedId(e.target.value); // 문자열로 관리\r\n  };\r\n\r\n  return (\r\n    <div className=\"select-shop-wrap\">\r\n      {/* CreateReviewEvent.collect() 가 읽는 hidden inputs */}\r\n      <input type=\"hidden\" id=\"event-store-id\" />\r\n      <input type=\"hidden\" id=\"event-shop\" />\r\n      <input type=\"hidden\" id=\"event-lat\" />\r\n      <input type=\"hidden\" id=\"event-lng\" />\r\n      <input type=\"hidden\" id=\"event-address\" />\r\n\r\n      <select\r\n        className={`select-input ${selectedId === \"\" ? \"is-placeholder\" : \"\"}`}\r\n        value={selectedId}\r\n        onChange={handleChange}\r\n        disabled={loading}\r\n        title={loading ? \"불러오는 중...\" : \"매장 선택\"}\r\n      >\r\n        <option value=\"\" disabled hidden>매장 선택</option>\r\n\r\n        {loading && <option value=\"\" disabled>불러오는 중...</option>}\r\n\r\n        {!loading && error && (\r\n          <option value=\"\" disabled>매장 목록을 불러오지 못했습니다.</option>\r\n        )}\r\n\r\n        {!loading && !error && !hasStores && (\r\n          <option value=\"\" disabled>매장이 없습니다.</option>\r\n        )}\r\n\r\n        {!loading && !error && hasStores &&\r\n          stores.map((s) => (\r\n            <option key={String(s.id)} value={String(s.id)}>\r\n              {s.name /* ← 정규화된 이름 */}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectShop;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./EventPoaster.css\";\r\n\r\n/**\r\n * 포스터 업로더 (작은 플로팅 미리보기)\r\n * - 즉시 화면 노출 X\r\n * - \"미리보기\" 버튼 클릭 시 우하단 작은 창으로 표시\r\n *\r\n * Props:\r\n *  - onChange?: (file: File | null) => void\r\n *  - maxSizeMB?: number (기본 5MB)\r\n */\r\nexport default function EventPoaster({ onChange, maxSizeMB = 5 }) {\r\n  const fileInputRef = useRef(null);\r\n  const [file, setFile] = useState(null);\r\n  const [previewURL, setPreviewURL] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    const f = e.target.files?.[0];\r\n    if (!f) return;\r\n\r\n    // 이미지 타입/크기 간단 검증\r\n    if (!f.type.startsWith(\"image/\")) {\r\n      alert(\"이미지 파일만 업로드할 수 있습니다.\");\r\n      if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n      setFile(null);\r\n      onChange?.(null);\r\n      return;\r\n    }\r\n    const maxBytes = maxSizeMB * 1024 * 1024;\r\n    if (f.size > maxBytes) {\r\n      alert(`이미지 크기는 ${maxSizeMB}MB 이하여야 합니다.`);\r\n      if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n      setFile(null);\r\n      onChange?.(null);\r\n      return;\r\n    }\r\n\r\n    setFile(f);\r\n    onChange?.(f);\r\n  };\r\n\r\n  // Blob URL 생성/해제\r\n  useEffect(() => {\r\n    if (!file) {\r\n      setPreviewURL(\"\");\r\n      return;\r\n    }\r\n    const url = URL.createObjectURL(file);\r\n    setPreviewURL(url);\r\n    return () => URL.revokeObjectURL(url);\r\n  }, [file]);\r\n\r\n  // ESC로 미리보기 창 닫기\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    const onKeyDown = (e) => e.key === \"Escape\" && setOpen(false);\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\r\n  }, [open]);\r\n\r\n  const clearFile = () => {\r\n    setFile(null);\r\n    setPreviewURL(\"\");\r\n    if (fileInputRef.current) fileInputRef.current.value = \"\";\r\n    onChange?.(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"poster-upload\">\r\n      {/* 업로드 버튼 */}\r\n      <label className=\"btn poster-btn\" title=\"이벤트 포스터 업로드\">\r\n        포스터 업로드\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileChange}\r\n          style={{ display: \"none\" }}\r\n        />\r\n      </label>\r\n\r\n      {/* 미리보기 / 초기화 */}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn poster-btn\"\r\n        onClick={() => setOpen(true)}\r\n        disabled={!file}\r\n        title={file ? \"미리보기\" : \"이미지를 먼저 선택하세요\"}\r\n      >\r\n        미리보기\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn poster-btn\"\r\n        onClick={clearFile}\r\n        disabled={!file}\r\n        title={file ? \"선택한 이미지 제거\" : \"제거할 이미지가 없습니다\"}\r\n      >\r\n        제거\r\n      </button>\r\n\r\n      {/* 선택된 파일명(텍스트만) */}\r\n      {file && (\r\n        <div className=\"poster-filename\" title={file.name}>\r\n          {file.name}\r\n        </div>\r\n      )}\r\n\r\n      {/* 🔹 우하단 작은 미리보기 패널 (오버레이 없음) */}\r\n      {open && (\r\n        <div\r\n          className=\"poster-float\"\r\n          role=\"dialog\"\r\n          aria-modal=\"false\"\r\n          aria-label=\"포스터 미리보기\"\r\n        >\r\n          <div className=\"poster-float-header\">\r\n            <strong>포스터 미리보기</strong>\r\n            <button\r\n              type=\"button\"\r\n              className=\"poster-close\"\r\n              onClick={() => setOpen(false)}\r\n              aria-label=\"닫기\"\r\n            />\r\n          </div>\r\n          <div className=\"poster-float-body\">\r\n            {previewURL ? (\r\n              <img\r\n                src={previewURL}\r\n                alt=\"이벤트 포스터 미리보기\"\r\n                className=\"poster-preview-img\"\r\n              />\r\n            ) : (\r\n              <p>선택된 이미지가 없습니다.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport './EventTitleStyle.css';\r\n\r\nfunction EventTitle() {\r\n  const [title, setTitle] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        id = \"event-title\"\r\n        className={`title-input ${title === \"\" ? \"is-placeholder\" : \"\"}`}\r\n        type=\"text\" value={title}\r\n        placeholder=\"리뷰 미션 제목을 입력해주세요.\" onChange={handleChange} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventTitle;","import React, { useState } from \"react\";\r\nimport \"./EventContentStyle.css\";\r\n\r\nexport default function EventContent() {\r\n  const [desc, setDesc] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      {/* ✅ CreateButton/collect 폴백용 hidden (id 고정) */}\r\n      <input type=\"hidden\" id=\"event-desc\" value={desc} readOnly />\r\n\r\n      <textarea\r\n        className={`content-input ${desc === \"\" ? \"is-placeholder\" : \"\"}`}\r\n        placeholder=\"이벤트 설명을 입력해주세요.\"\r\n        value={desc}\r\n        onChange={(e) => setDesc(e.target.value)}\r\n        rows={10}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","// src/features/createReviewEvent/CreateButton/CreateButton.jsx\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../../../api\";\r\nimport \"./CreateButton.css\";\r\n\r\nexport const JSON_HDR = {\r\n  withCredentials: true,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n};\r\n\r\nexport const SESSION_ONLY = { withCredentials: true };\r\n\r\nconst pad2 = (n) => String(n).padStart(2, \"0\");\r\n\r\n// 문자열 → Date(local)\r\nconst parseToLocalDate = (v) => {\r\n  if (!v) return null;\r\n  if (v instanceof Date) return isNaN(v) ? null : v;\r\n  let s = String(v).trim();\r\n  if (!s) return null;\r\n  s = s.replace(/\\//g, \"-\");\r\n\r\n  let m = s.match(\r\n    /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d{3})$/\r\n  );\r\n  if (m) {\r\n    const [, y, mo, d, hh, mm, ss, sss] = m.map(Number);\r\n    return new Date(y, mo - 1, d, hh, mm, ss, sss);\r\n  }\r\n\r\n  m = s.match(\r\n    /^(\\d{4})-(\\d{2})-(\\d{2})[ T](\\d{2}):(\\d{2})(?::(\\d{2}))?$/\r\n  );\r\n  if (m) {\r\n    const [, y, mo, d, hh, mm, ss] = m.map(Number);\r\n    return new Date(y, mo - 1, d, hh, mm, ss || 0, 0);\r\n  }\r\n  return null;\r\n};\r\n\r\n// ✅ LocalDateTime 포맷\r\nconst formatLocalDateTime = (d) => {\r\n  if (!(d instanceof Date) || isNaN(d?.valueOf())) return null;\r\n  return (\r\n    d.getFullYear() +\r\n    \"-\" +\r\n    pad2(d.getMonth() + 1) +\r\n    \"-\" +\r\n    pad2(d.getDate()) +\r\n    \"T\" +\r\n    pad2(d.getHours()) +\r\n    \":\" +\r\n    pad2(d.getMinutes()) +\r\n    \":\" +\r\n    pad2(d.getSeconds()) +\r\n    \".000\"\r\n  );\r\n};\r\n\r\nconst readHidden = (id) => {\r\n  const el = document.getElementById(id);\r\n  return el ? String(el.value || \"\").trim() : \"\";\r\n};\r\n\r\nconst toIntOrNull = (v) => {\r\n  if (v === undefined || v === null) return null;\r\n  const s = String(v).trim();\r\n  if (s === \"\") return null;\r\n  const n = Number(s);\r\n  if (!Number.isFinite(n)) return null;\r\n  return Math.max(0, Math.floor(n));\r\n};\r\n\r\nexport default function CreateButton({ collect, posterFile }) {\r\n  const navigate = useNavigate();\r\n  const [pending, setPending] = useState(false);\r\n\r\n  const onClick = async () => {\r\n    if (pending) return;\r\n\r\n    const data = collect?.() ?? null;\r\n    if (!data || typeof data !== \"object\") {\r\n      alert(\"폼 데이터를 수집할 수 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    const title = String(data.title ?? \"\").trim();\r\n    const description = String(\r\n      (data.description ?? readHidden(\"event-desc\")) || \"\"\r\n    ).trim();\r\n    const storeId = Number(data.storeId || 0);\r\n    if (!title) return alert(\"제목을 입력하세요.\");\r\n    if (!storeId) return alert(\"매장을 선택하세요.\");\r\n\r\n    const rewardContent = String(\r\n      (data.rewardContent ?? readHidden(\"event-reward-content\")) || \"\"\r\n    ).trim();\r\n\r\n    // 날짜 확보\r\n    const rawStart =\r\n      data.startAt || readHidden(\"event-start-at\") || readHidden(\"event-start\");\r\n    const rawEnd =\r\n      data.endAt || readHidden(\"event-end-at\") || readHidden(\"event-end\");\r\n\r\n    // ✅ LocalDateTime 변환\r\n    const startAt = formatLocalDateTime(parseToLocalDate(rawStart));\r\n    const endAt = formatLocalDateTime(parseToLocalDate(rawEnd));\r\n    if (!startAt || !endAt) {\r\n      alert(\"시작/종료 일시를 선택하세요.\");\r\n      return;\r\n    }\r\n\r\n    const rewardCountVal =\r\n      toIntOrNull(data.rewardCount) ??\r\n      toIntOrNull(readHidden(\"event-reward-count\"));\r\n\r\n    try {\r\n      setPending(true);\r\n\r\n      const requestPayload = {\r\n        title,\r\n        description,\r\n        startAt,\r\n        endAt,\r\n        storeId,\r\n        rewardContent,\r\n      };\r\n      if (rewardCountVal !== null)\r\n        requestPayload.rewardCount = rewardCountVal;\r\n\r\n      const form = new FormData();\r\n      const requestBlob = new Blob([JSON.stringify(requestPayload)], {\r\n        type: \"application/json\",\r\n      });\r\n      form.append(\"request\", requestBlob, \"request.json\");\r\n\r\n      if (posterFile) {\r\n        form.append(\"image\", posterFile, posterFile.name || \"image\");\r\n      }\r\n\r\n      await api.post(\"/itda/missions\", form, SESSION_ONLY);\r\n\r\n      alert(\"미션이 등록되었습니다.\");\r\n      navigate(\"/map\");\r\n    } catch (e) {\r\n      const msg =\r\n        e?.response?.data?.message ||\r\n        e?.message ||\r\n        \"등록 중 오류가 발생했습니다.\";\r\n      alert(msg);\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={onClick}\r\n      disabled={pending}\r\n      className=\"re-btn re-btn--primary re-btn--lg re-btn--80vw re-btn--center\"\r\n      data-pending={pending ? \"true\" : \"false\"}\r\n      aria-busy={pending ? \"true\" : \"false\"}\r\n    >\r\n      {pending ? \"등록 중...\" : \"리뷰이벤트 등록\"}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./rewardContent.css\";\r\n\r\nexport default function RewardContent({\r\n  disabled = false,\r\n  required = false,\r\n  exampleText = \"예시) 아메리카노 1잔\",\r\n}) {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  return (\r\n    <label>\r\n      {/* hidden 값: CreateButton/collect에서 읽음 */}\r\n      <input type=\"hidden\" id=\"event-reward-content\" value={content} readOnly />\r\n\r\n      <input\r\n        type=\"text\"\r\n        className=\"reward-content-input\"\r\n        placeholder=\"보상 내용을 입력해주세요.\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        title={exampleText}\r\n        disabled={disabled}\r\n        required={required}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport DatePick from \"./Date/datePick\";\r\nimport RewardCount from \"./Reward/rewardCount\";\r\nimport \"./CreateReviewEventStyle.css\";\r\nimport SelectShop from \"./SelectShop/Select\";\r\nimport EventPoaster from \"./EventPoaster/EventPoaster\";\r\nimport EventTitle from \"./EventTitle/EventTitle\";\r\nimport EventContent from \"./EventContents/EventContent\";\r\nimport CreateButton from \"./CreateButton/CreateButton\";\r\nimport RewardContent from \"./Reward/rewardContent\";\r\n\r\nfunction CreateReviewEvent() {\r\n  const [posterFile, setPosterFile] = useState(null); // ✅ 포스터 파일 상태\r\n\r\n  const collect = () => {\r\n    const g = (id) => (document.getElementById(id)?.value ?? \"\").trim();\r\n    const toISO = (d) => (d ? new Date(d).toISOString().slice(0, 19) : \"\"); // 'YYYY-MM-DDTHH:mm:ss'\r\n    const toFloatOrNull = (v) => {\r\n      const n = parseFloat(v);\r\n      return Number.isFinite(n) ? n : null;\r\n    };\r\n    const toIntOrNull = (v) => {\r\n      const n = parseInt(v, 10);\r\n      return Number.isFinite(n) ? n : null;\r\n    };\r\n\r\n    const start = g(\"event-start\");\r\n    const end = g(\"event-end\");\r\n\r\n    return {\r\n      title: g(\"event-title\"),\r\n\r\n      // ✅ EventContent → description\r\n      description: g(\"event-desc\"),\r\n\r\n      storeId: Number(g(\"event-store-id\") || 0), // SelectShop가 채워줌\r\n      shopName: g(\"event-shop\"),\r\n      address: g(\"event-address\"),\r\n\r\n      // ✅ 문자열 → 숫자 변환 (추천 방식)\r\n      lat: toFloatOrNull(g(\"event-lat\")),\r\n      lng: toFloatOrNull(g(\"event-lng\")),\r\n\r\n      startAt: toISO(start),\r\n      endAt: toISO(end),\r\n\r\n      // 선택 필드들\r\n      rewardCount: toIntOrNull(g(\"event-reward-count\")),\r\n\r\n      // ✅ RewardContent → rewardContent\r\n      rewardContent: g(\"event-reward-content\"),\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <EventTitle /> {/* 내부 input에 id=\"event-title\" */}\r\n      <h1></h1>\r\n\r\n      <div className=\"app-row2\">\r\n        <div className=\"app-row\">\r\n          <DatePick />       {/* 시작/종료 input: id=\"event-start\"/\"event-end\" */}\r\n          <RewardCount />    {/* hidden/input: id=\"event-reward-count\" 로 맞춰주세요 */}\r\n          <RewardContent />  {/* hidden: #event-reward-content + textarea */}\r\n        </div>\r\n      </div>\r\n\r\n      <h1></h1>\r\n      <div className=\"app-row2\">\r\n        <div className=\"app-row\">\r\n          <SelectShop />\r\n          {/* SelectShop는 아래 hidden을 채워줘야 합니다:\r\n              id=\"event-store-id\", id=\"event-shop\", id=\"event-lat\", id=\"event-lng\", id=\"event-address\" */}\r\n          <EventPoaster onChange={setPosterFile} />  {/* ✅ 파일 받기 */}\r\n        </div>\r\n      </div>\r\n\r\n      <h1></h1>\r\n      <EventContent />  {/* textarea + hidden: #event-desc */}\r\n\r\n      <h1></h1>\r\n      <CreateButton collect={collect} posterFile={posterFile} /> {/* ✅ 파일 전달 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateReviewEvent;\r\n","// src/features/createReviewEvent/index.js\r\nimport React from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport CreateReviewEvent from \"./CreateReviewEvent\";      // 기존 CreateReviewEvent의 App.js\r\n\r\nexport default function CreateReviewEventFeature() {\r\n  return (\r\n    <div data-app=\"createreviewevent\">\r\n      <Routes>\r\n        <Route index element={<CreateReviewEvent />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["registerLocale","ko","setDefaultLocale","pad2","n","String","padStart","startDate","setStartDate","useState","endDate","setEndDate","today","startOfDay","Date","now","isValidDate","d","isNaN","valueOf","writeHidden","id","value","el","document","getElementById","writeBoth","baseId","date","concat","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","toLocalMinuteSQL","endMinDate","startHasBounds","isSameDay","startMinTimeProp","undefined","startMaxTimeProp","endSameDayAsStart","endIsToday","endMinTimeProp","endMaxTimeProp","_jsxs","className","children","_jsx","type","DatePicker","placeholderText","locale","showTimeSelect","timeIntervals","dateFormat","selected","selectsStart","minDate","minTime","maxTime","onChange","nextStart","isBefore","withPortal","popperPlacement","selectsEnd","baseStart","nextEnd","count","setCount","readOnly","placeholder","e","raw","target","Math","max","floor","Number","min","step","inputMode","pattern","_ref","onSelect","selectedId","setSelectedId","stores","setStores","loading","setLoading","error","setError","useEffect","mounted","data","api","normalized","Array","isArray","items","map","_ref2","_raw$id","_raw$store","_ref3","_ref4","_ref5","_ref6","_raw$name","_raw$store2","_ref7","_raw$latitude","_raw$store3","_ref8","_raw$longitude","_raw$store4","storeId","store","name","storeName","shopName","title","latRaw","latitude","lat","lngRaw","longitude","lng","_objectSpread","selectedStore","useMemo","find","s","storeIdInput","shopInput","latInput","lngInput","addrInput","_selectedStore$name","_selectedStore$latitu","_selectedStore$longit","category","description","hasStores","length","disabled","hidden","EventPoaster","maxSizeMB","fileInputRef","useRef","file","setFile","previewURL","setPreviewURL","open","setOpen","url","URL","createObjectURL","revokeObjectURL","onKeyDown","key","window","addEventListener","removeEventListener","ref","accept","_e$target$files","f","files","startsWith","alert","current","maxBytes","size","style","display","onClick","clearFile","role","src","alt","setTitle","EventContent","desc","setDesc","rows","SESSION_ONLY","withCredentials","parseToLocalDate","v","trim","replace","m","match","y","mo","hh","mm","ss","sss","formatLocalDateTime","readHidden","toIntOrNull","isFinite","CreateButton","collect","posterFile","navigate","useNavigate","pending","setPending","async","_collect","_data$title","_data$description","_data$rewardContent","_toIntOrNull","rewardContent","rawStart","startAt","rawEnd","endAt","rewardCountVal","rewardCount","requestPayload","form","FormData","requestBlob","Blob","JSON","stringify","append","_e$response","_e$response$data","msg","response","message","RewardContent","required","exampleText","content","setContent","setPosterFile","EventTitle","DatePick","RewardCount","SelectShop","g","_document$getElementB","_document$getElementB2","toISO","toISOString","slice","toFloatOrNull","parseFloat","start","end","address","parseInt","CreateReviewEventFeature","Routes","Route","index","element","CreateReviewEvent","path","Navigate","to"],"sourceRoot":""}