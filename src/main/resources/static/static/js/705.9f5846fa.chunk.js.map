{"version":3,"file":"static/js/705.9f5846fa.chunk.js","mappings":"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","sources":["features/register/Register.js","features/register/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport api from \"../../api\";\r\nimport \"./Register.css\";\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // URL 파라미터 반영: ?role=OWNER, ?next=/path\r\n  const params = new URLSearchParams(location.search);\r\n  const next = params.get(\"next\") || \"/\";\r\n  const initialRole = params.get(\"role\");\r\n  const [role, setRole] = useState(\r\n    initialRole === \"OWNER\" ? \"OWNER\" : \"USER\"\r\n  );\r\n\r\n  const [username, setUsername] = useState(\"\"); // 계정 아이디\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [pending, setPending] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // 간단한 클라 검증(서버 검증은 별도)\r\n  const validate = () => {\r\n    const u = username.trim();\r\n    const p = password.trim();\r\n    const e = email.trim();\r\n\r\n    if (u.length < 4 || u.length > 15) {\r\n      return \"아이디는 4자 이상 15자 이하여야 합니다.\";\r\n    }\r\n    if (p.length < 8 || p.length > 20) {\r\n      return \"비밀번호는 8자 이상 20자 이하여야 합니다.\";\r\n    }\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e)) {\r\n      return \"올바른 이메일 형식을 입력하세요.\";\r\n    }\r\n    if (role !== \"OWNER\" && role !== \"USER\") {\r\n      return \"역할을 선택하세요.\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (pending) return;\r\n\r\n    const v = validate();\r\n    if (v) {\r\n      setError(v);\r\n      return;\r\n    }\r\n\r\n    setError(\"\");\r\n    try {\r\n      setPending(true);\r\n\r\n      await api.post(\"/itda/auth/register\", {\r\n        username: username.trim(),\r\n        password: password.trim(),\r\n        email: email.trim(),\r\n        role, // \"OWNER\" | \"USER\"\r\n      });\r\n\r\n      alert(\"회원가입 성공!\");\r\n      navigate(\"/login?next=\" + encodeURIComponent(next), { replace: true });\r\n    } catch (err) {\r\n      const msg =\r\n        err?.response?.data?.message ||\r\n        err?.response?.data?.error ||\r\n        \"회원가입에 실패했습니다.\";\r\n      setError(msg);\r\n    } finally {\r\n      setPending(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth auth-register\">\r\n      <div className=\"container\">\r\n        <div className=\"logo\" role=\"img\" aria-label=\"Itda\">Itda</div>\r\n        <h2 className=\"title\">Itda에 오신 것을 환영합니다!</h2>\r\n\r\n        <form onSubmit={handleRegister} className=\"register-form\" noValidate>\r\n          {/* 역할 선택 */}\r\n          <fieldset className=\"role-group\" disabled={pending}>\r\n            <legend className=\"role-legend\">역할 선택</legend>\r\n\r\n            <div className=\"role-seg\">\r\n              <label\r\n                className={\"seg\" + (role === \"OWNER\" ? \" active\" : \"\")}\r\n                htmlFor=\"role-owner\"\r\n              >\r\n                <input\r\n                  id=\"role-owner\"\r\n                  className=\"sr-only\"\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  value=\"OWNER\"\r\n                  checked={role === \"OWNER\"}\r\n                  onChange={() => setRole(\"OWNER\")}\r\n                />\r\n                <span className=\"seg-title\">사장님</span>\r\n                <span className=\"seg-desc\">가게 관리 / 미션 등록</span>\r\n              </label>\r\n\r\n              <label\r\n                className={\"seg\" + (role === \"USER\" ? \" active\" : \"\")}\r\n                htmlFor=\"role-reviewer\"\r\n              >\r\n                <input\r\n                  id=\"role-reviewer\"\r\n                  className=\"sr-only\"\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  value=\"USER\"\r\n                  checked={role === \"USER\"}\r\n                  onChange={() => setRole(\"USER\")}\r\n                />\r\n                <span className=\"seg-title\">리뷰어</span>\r\n                <span className=\"seg-desc\">미션 참여 / 리뷰 작성</span>\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"아이디 (4~15자)\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            autoComplete=\"username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"이메일\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"비밀번호 (8~20자)\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"new-password\"\r\n            required\r\n          />\r\n\r\n          {error && <div className=\"form-error\">{error}</div>}\r\n\r\n          <button type=\"submit\" className=\"signup-btn\" disabled={pending}>\r\n            {pending ? \"가입 중...\" : \"회원가입\"}\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"link-btn\"\r\n            onClick={() => navigate(\"/login?next=\" + encodeURIComponent(next))}\r\n            disabled={pending}\r\n          >\r\n            이미 계정이 있으신가요? 로그인\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// features/map/index.jsx\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nexport default function MapFeature() {\r\n  return (\r\n    <div data-app=\"map\">\r\n      <Routes>\r\n        <Route index element={<Register />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Register","navigate","useNavigate","location","useLocation","params","URLSearchParams","search","next","get","initialRole","role","setRole","useState","username","setUsername","email","setEmail","password","setPassword","pending","setPending","error","setError","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","v","validate","u","trim","p","length","test","api","alert","encodeURIComponent","replace","err","_err$response","_err$response$data","_err$response2","_err$response2$data","msg","response","data","message","noValidate","disabled","htmlFor","id","type","name","value","checked","onChange","placeholder","target","autoComplete","required","onClick","MapFeature","Routes","Route","index","element","path","Navigate","to"],"sourceRoot":""}