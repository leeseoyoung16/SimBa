{"version":3,"file":"static/js/677.88590470.chunk.js","mappings":"6JAMe,SAASA,IAAc,IAADC,EACnC,MAAOC,IAAUC,EAAAA,EAAAA,MACXC,EAAYF,EAAOG,IAAI,aACvBC,GAAWC,EAAAA,EAAAA,MAGXC,EAAiB,KAGhBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,GACzCG,IAAc,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,OAAQ,IAAIC,WAAWC,cACvCC,EAAwB,aAAXJ,GAAoC,SAAXA,GAE5CK,EAAAA,EAAAA,WAAU,KACR,IAAIC,GAAQ,EAWZ,MAVA,WACE,IACE,MAAM,KAAEC,SAAeC,EAAAA,GAAAA,IAAQ,WAAY,CAAEC,iBAAiB,IAC1DH,GAAOV,EAAQW,GAAQ,KAC7B,CAAE,MAAAG,GACIJ,GAAOV,EAAQ,KACrB,CAAC,QACKU,GAAOP,GAAe,EAC5B,CACD,EATD,GAUO,KACLO,GAAQ,IAET,IAGH,MAAOK,EAAMC,IAAWf,EAAAA,EAAAA,UAAS,KAC1BgB,EAAQC,IAAajB,EAAAA,EAAAA,UAAS,IAC9BkB,EAAQC,IAAanB,EAAAA,EAAAA,UAAS,IAC/BoB,GAAeC,EAAAA,EAAAA,QAAO,OAGrBC,EAAaC,IAAkBvB,EAAAA,EAAAA,WAAS,IACxCwB,EAAaC,IAAkBzB,EAAAA,EAAAA,UAAS,YACxC0B,EAAcC,IAAmB3B,EAAAA,EAAAA,UAAS,IAiBjDQ,EAAAA,EAAAA,WACE,IAAM,KACJU,EAAOU,QAASC,GAAQA,EAAIC,YAAcC,IAAIC,gBAAgBH,EAAIC,cAEpE,CAACZ,IAGH,MAAMe,EAAc,WAAuB,IAAtBC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UACrBjB,EAAOkB,SACZX,EAAeS,GACfP,EAAgB,GAChBJ,GAAe,GACjB,EA2GMe,GAAgB/B,IAAed,GAAayB,EAAOkB,QAAU,GAC7DG,EAAkBrB,EAAOkB,OAAM,GAAAI,OAC9BtB,EAAOkB,OAAM,uEAChB,qDAEJ,OACEK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAE1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAC,iCAI/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAS,0BAAAF,OAA6BjC,GAAed,EAAyB,GAAb,YAAkBkD,SAAA,CACrF1C,GACC2C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAC,gFAC3BlD,EAEAc,EAED,MADFqC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAC,qGAF9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAC,mGAMhCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAActC,KAAK,aAAa,aAAW,4BAAOuC,SAC9D,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGE,IAAKC,IACpBF,EAAAA,EAAAA,KAAA,UAEEG,KAAK,SACLL,UAAWI,GAAK9B,EAAS,cAAgB,OACzCgC,QAASA,IAAM/B,EAAU6B,GACzB,eAAcA,GAAK9B,EACnB,gBAAAwB,OAAeM,EAAC,UAAIH,SACrB,UANMG,OAaXF,EAAAA,EAAAA,KAAA,YACEK,YAAW,uGAAAT,OAA8B3C,EAAc,iBACvD6C,UAAU,kBACVQ,MAAOpC,EACPqC,SAAWC,IAET,MAAMN,GAAKM,EAAEC,OAAOH,OAAS,IAAII,MAAM,EAAGzD,GAC1CkB,EAAQ+B,IAEVS,UAAW1D,EACX2D,UAAWjD,IAAed,EAC1BgE,KAAM,GACN,mBAAiB,0BAEnBhB,EAAAA,EAAAA,MAAA,OACEiB,GAAG,uBACHhB,UAAS,wBAAAF,OAA0B1B,EAAKsB,QAAUvC,EAAiB,QAAU,IAC7E,YAAU,SAAQ8C,SAAA,CAEjB7B,EAAKsB,OAAO,MAAIvC,EAAe,aAIlC4C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SACEe,IAAKvC,EACLsC,GAAG,cACHX,KAAK,OACLa,OAAO,UACPC,UAAQ,EACRV,SA3MiBC,IACzB,MAAMU,EAAQC,MAAMC,KAAKZ,EAAEC,OAAOS,OAAS,IAC3C,IAAKA,EAAM1B,OAAQ,OACnB,MAAM6B,EAASC,KAAKC,IAAI,EAAG,GAAKjD,EAAOkB,QACjCkB,EAAQQ,EAAMR,MAAM,EAAGW,GACzBX,EAAMlB,OAAS0B,EAAM1B,QAAQgC,MAAM,wHACvC,MAAMC,EAAOf,EAAMT,IAAKyB,IAAI,CAC1BZ,GAAG,GAADlB,OAAK+B,KAAKC,MAAK,KAAAhC,OAAI0B,KAAKO,SAASpE,SAAS,IAAIiD,MAAM,IACtDgB,OACAxC,WAAYC,IAAI2C,gBAAgBJ,MAElCnD,EAAWwD,GAAS,IAAIA,KAASN,IACjCjB,EAAEC,OAAOH,MAAQ,IAgMTR,UAAU,oBACVc,SAAUlB,EACVsC,MAAM,2GAGRnC,EAAAA,EAAAA,MAAA,UACEM,KAAK,SACLL,UAAU,kBACVM,QAASA,KAAA,IAAA6B,EAAA,OAAOvC,IAAoC,QAAxBuC,EAAIzD,EAAa0D,eAAO,IAAAD,OAAA,EAApBA,EAAsBE,UACtDvB,SAAUlB,EAAaK,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,WAAW,iBAAWC,SAAC,uBAEhC,sCAITC,EAAAA,EAAAA,KAAA,UACEG,KAAK,SACLL,UAAU,cACVM,QAASA,IAAMf,EAAY,WAC3BuB,UAAWjD,GAAgC,IAAlBW,EAAOkB,OAAaO,SAC9C,8BAGDC,EAAAA,EAAAA,KAAA,UACEG,KAAK,SACLL,UAAU,qBACVM,QAASA,IAAMf,EAAY,UAC3BuB,UAAWjD,GAAgC,IAAlBW,EAAOkB,OAAaO,SAC9C,kBAGDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,YAAY,YAAU,SAAQC,SAC3CJ,QAILK,EAAAA,EAAAA,KAAA,UACEI,QAtMgBgC,UAAa,IAADC,EAClC,IAAKxF,EAAW,OAAO2E,MAAM,+EAC7B,IAAK7D,EAAY,OAEjB,MAAM2E,EAAUpE,EAAKqE,OACrB,GAAID,EAAQ9C,OAAS,GAEnB,YADAgC,MAAM,yFAGR,GAAIc,EAAQ9C,OAASvC,EAEnB,YADAuE,MAAM,mCAAD5B,OAAW3C,EAAc,yFAAA2C,OAAuB0C,EAAQ9C,OAAM,YAGrE,GAAe,IAAXpB,EAEF,YADAoD,MAAM,4DAIR,MAAMgB,EAAG,kBAAA5C,OAAqB6C,mBAAmB5F,GAAU,YACrD6F,GAAqB,QAATL,EAAA/D,EAAO,UAAE,IAAA+D,OAAA,EAATA,EAAWX,OAAQ,KAG/BiB,EAAW,WAA8B,IAA7BC,EAAarD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAChC,MAAMsD,EAAK,IAAIC,SACTC,EAAc,CAAET,UAASlE,OAAQ4E,OAAO5E,IACxC6E,EAAW,IAAIC,KAAK,CAACC,KAAKC,UAAUL,IAAe,CAAE5C,KAAM,qBAGjE,OAFA0C,EAAGQ,OAAO,UAAWJ,EAAU,gBAC3BP,GAAWG,EAAGQ,OAAOT,EAAeF,EAAWA,EAAUY,MACtDT,CACT,EAGMU,EAAiBV,GACrB9E,EAAAA,GAAAA,KAASyE,EAAKK,EAAI,CAChB7E,iBAAiB,EACjBwF,QAAS,CAAE,oBAAgB/D,GAC3BgE,iBAAkB,CAAE3F,GAASA,KAGjC,IACE,GAAI4E,EAEF,UACQa,EAAcZ,EAAS,SAC/B,CAAE,MAAOe,GAAK,IAADC,EACX,MAAMC,EAAW,OAAFF,QAAE,IAAFA,GAAY,QAAVC,EAAFD,EAAIG,gBAAQ,IAAAF,OAAV,EAAFA,EAAcC,OAC7B,GAAe,MAAXA,GAA6B,MAAXA,GAA6B,MAAXA,EAAgB,MAAMF,EAG9D,UACQH,EAAcZ,EAAS,QAC/B,CAAE,MAAOmB,GAAK,IAADC,EACX,MAAMC,EAAY,OAAFF,QAAE,IAAFA,GAAY,QAAVC,EAAFD,EAAID,gBAAQ,IAAAE,OAAV,EAAFA,EAAcH,OAC9B,GAAgB,MAAZI,GAA+B,MAAZA,GAA+B,MAAZA,EAAiB,MAAMF,EAGjE,UACQP,EAAcZ,EAAS,OAC/B,CAAE,MAAOsB,GAEP,MAAMC,QAAYC,MAAM3B,EAAK,CAC3B4B,OAAQ,OACRC,YAAa,UACbC,KAAM3B,EAAS,WAEjB,IAAKuB,EAAIK,GAAI,CACX,MAAMC,QAAYN,EAAIhG,OAAOuG,MAAM,IAAM,IACzC,MAAM,IAAIC,MAAMF,GAAG,oCAAA5E,OAAesE,EAAIN,OAAM,KAC9C,CACF,CACF,CACF,YAGML,EAAcZ,EAAS,UAG/BnB,MAAM,kEACNzE,EAAS,IACX,CAAE,MAAOyD,GAAI,IAADmE,EAAAC,EAAAC,EAAAC,EACV,MAAMC,GACH,OAADvE,QAAC,IAADA,GAAW,QAAVmE,EAADnE,EAAGqD,gBAAQ,IAAAc,GAAM,QAANC,EAAXD,EAAa7G,YAAI,IAAA8G,OAAhB,EAADA,EAAmBI,WAClB,OAADxE,QAAC,IAADA,GAAW,QAAVqE,EAADrE,EAAGqD,gBAAQ,IAAAgB,GAAM,QAANC,EAAXD,EAAa/G,YAAI,IAAAgH,OAAhB,EAADA,EAAmBG,SAClB,OAADzE,QAAC,IAADA,OAAC,EAADA,EAAGwE,UACH,4FACFxD,MAAMuD,EACR,GAiHMjF,UAAU,gBACVc,UAAWjD,IAAed,EAAUkD,SACrC,oBAMFrB,GAAeJ,EAAOkB,OAAS,IAC9BQ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAkB,aAAW,OAAOtC,KAAK,SAAQuC,UAC9DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAsBtC,KAAK,WAAUuC,SAAA,EAClDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SACZ,WAAhBnB,EAA2B,kCAAW,iDAEzCoB,EAAAA,EAAAA,KAAA,UACEG,KAAK,SACLL,UAAU,gBACV,aAAW,eACXM,QA3OO8E,IAAMvG,GAAe,SA+OhCkB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,UACEG,KAAK,SACLL,UAAU,mBACVM,QAlPI+E,IAChB7G,EAAOkB,QAAUT,EAAiBqG,IAAOA,EAAI,EAAI9G,EAAOkB,QAAUlB,EAAOkB,QAkP7D,aAAW,kCAAQO,SACpB,YAGDC,EAAAA,EAAAA,KAAA,OACEqF,IAAyB,QAAtB3I,EAAE4B,EAAOQ,UAAa,IAAApC,OAAA,EAApBA,EAAsBwC,WAC3BoG,IAAG,mCAAA1F,OAAYd,EAAe,EAAC,KAAAc,OAAItB,EAAOkB,QAC1CM,UAAU,yBAEZE,EAAAA,EAAAA,KAAA,UACEG,KAAK,SACLL,UAAU,oBACVM,QA7PImF,IAChBjH,EAAOkB,QAAUT,EAAiBqG,IAAOA,EAAI,GAAK9G,EAAOkB,QA6P7C,aAAW,kCAAQO,SACpB,eAKHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC3BjB,EAAe,EAAE,MAAIR,EAAOkB,UAEd,WAAhBZ,IACCoB,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAASL,UAAU,aAAaM,QAvQhCoF,KACzB,IAAKlH,EAAOkB,OAAQ,OACpB,MAAMiG,EAAM3G,EACN4G,EAAMpH,EAAOmH,GACZ,OAAHC,QAAG,IAAHA,GAAAA,EAAKxG,YAAYC,IAAIC,gBAAgBsG,EAAIxG,YAC7C,MAAMyG,EAAMrH,EAAOsH,OAAO,CAACC,EAAGT,IAAMA,IAAMK,GAC1ClH,EAAUoH,GACLA,EAAInG,OACJT,EAAgB0G,GAAOE,EAAInG,OAASmG,EAAInG,OAAS,EAAIiG,GADzC9G,GAAe,IAgQqDoB,SAAC,uCAU1F,CC9Ve,SAAS+F,IACtB,OACE9F,EAAAA,EAAAA,KAAA,OAAK,WAAS,MAAKD,UACjBF,EAAAA,EAAAA,MAACkG,EAAAA,GAAM,CAAAhG,SAAA,EACLC,EAAAA,EAAAA,KAACgG,EAAAA,GAAK,CAACC,OAAK,EAACC,SAASlG,EAAAA,EAAAA,KAACmG,EAAM,OAC7BnG,EAAAA,EAAAA,KAACgG,EAAAA,GAAK,CAACI,KAAK,IAAIF,SAASlG,EAAAA,EAAAA,KAACqG,EAAAA,GAAQ,CAACC,GAAG,IAAIC,SAAO,UAIzD,C","sources":["features/review/Review.js","features/review/index.js"],"sourcesContent":["// src/pages/ReviewPage.jsx\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport api from \"../../api\";\r\nimport \"./Review.css\";\r\n\r\nexport default function ReviewPage() {\r\n  const [params] = useSearchParams();\r\n  const missionId = params.get(\"missionId\");\r\n  const navigate = useNavigate();\r\n\r\n  // ───────── constants\r\n  const MAX_REVIEW_LEN = 2000;\r\n\r\n  // ───────── user\r\n  const [user, setUser] = useState(null);\r\n  const [loadingUser, setLoadingUser] = useState(true);\r\n  const roleUp = (user?.role || \"\").toString().toUpperCase();\r\n  const isReviewer = roleUp === \"REVIEWER\" || roleUp === \"USER\";\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(\"/itda/me\", { withCredentials: true });\r\n        if (alive) setUser(data || null);\r\n      } catch {\r\n        if (alive) setUser(null);\r\n      } finally {\r\n        if (alive) setLoadingUser(false);\r\n      }\r\n    })();\r\n    return () => {\r\n      alive = false;\r\n    };\r\n  }, []);\r\n\r\n  // ───────── compose\r\n  const [text, setText] = useState(\"\");\r\n  const [rating, setRating] = useState(0);\r\n  const [images, setImages] = useState([]); // 로컬 프리뷰(최대 10장), 서버는 1장만 저장\r\n  const fileInputRef = useRef(null);\r\n\r\n  // preview modal\r\n  const [galleryOpen, setGalleryOpen] = useState(false);\r\n  const [galleryMode, setGalleryMode] = useState(\"preview\");\r\n  const [galleryIndex, setGalleryIndex] = useState(0);\r\n\r\n  const handleImageChange = (e) => {\r\n    const files = Array.from(e.target.files || []);\r\n    if (!files.length) return;\r\n    const remain = Math.max(0, 10 - images.length);\r\n    const slice = files.slice(0, remain);\r\n    if (slice.length < files.length) alert(\"이미지는 최대 10장까지 업로드할 수 있습니다.\");\r\n    const next = slice.map((file) => ({\r\n      id: `${Date.now()}_${Math.random().toString(36).slice(2)}`,\r\n      file,\r\n      previewUrl: URL.createObjectURL(file),\r\n    }));\r\n    setImages((prev) => [...prev, ...next]);\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  useEffect(\r\n    () => () => {\r\n      images.forEach((img) => img.previewUrl && URL.revokeObjectURL(img.previewUrl));\r\n    },\r\n    [images]\r\n  );\r\n\r\n  const openGallery = (mode = \"preview\") => {\r\n    if (!images.length) return;\r\n    setGalleryMode(mode);\r\n    setGalleryIndex(0);\r\n    setGalleryOpen(true);\r\n  };\r\n  const closeGallery = () => setGalleryOpen(false);\r\n  const prevImage = () =>\r\n    images.length && setGalleryIndex((i) => (i - 1 + images.length) % images.length);\r\n  const nextImage = () =>\r\n    images.length && setGalleryIndex((i) => (i + 1) % images.length);\r\n  const deleteCurrentImage = () => {\r\n    if (!images.length) return;\r\n    const idx = galleryIndex;\r\n    const tgt = images[idx];\r\n    if (tgt?.previewUrl) URL.revokeObjectURL(tgt.previewUrl);\r\n    const arr = images.filter((_, i) => i !== idx);\r\n    setImages(arr);\r\n    if (!arr.length) setGalleryOpen(false);\r\n    else setGalleryIndex(idx >= arr.length ? arr.length - 1 : idx);\r\n  };\r\n\r\n  // ───────── submit (multipart/form-data + request(JSON) + image) — 견고하게\r\n  const handleAddReview = async () => {\r\n    if (!missionId) return alert(\"잘못된 접근입니다. (missionId 없음)\");\r\n    if (!isReviewer) return;\r\n\r\n    const content = text.trim();\r\n    if (content.length < 10) {\r\n      alert(\"최소 10글자 이상 작성해야 합니다.\");\r\n      return;\r\n    }\r\n    if (content.length > MAX_REVIEW_LEN) {\r\n      alert(`리뷰는 최대 ${MAX_REVIEW_LEN}자까지 작성할 수 있습니다. (현재 ${content.length}자)`);\r\n      return;\r\n    }\r\n    if (rating === 0) {\r\n      alert(\"별점을 선택해주세요.\");\r\n      return;\r\n    }\r\n\r\n    const url = `/itda/missions/${encodeURIComponent(missionId)}/reviews`;\r\n    const firstFile = images[0]?.file || null;\r\n\r\n    // 공통: request(JSON) Blob 생성\r\n    const makeForm = (fileFieldName = \"image\") => {\r\n      const fd = new FormData();\r\n      const requestData = { content, rating: Number(rating) };\r\n      const jsonBlob = new Blob([JSON.stringify(requestData)], { type: \"application/json\" });\r\n      fd.append(\"request\", jsonBlob, \"request.json\");\r\n      if (firstFile) fd.append(fileFieldName, firstFile, firstFile.name);\r\n      return fd;\r\n    };\r\n\r\n    // axios 전송 (전역 JSON 헤더/transformRequest 무력화)\r\n    const postWithAxios = (fd) =>\r\n      api.post(url, fd, {\r\n        withCredentials: true,\r\n        headers: { \"Content-Type\": undefined }, // boundary 자동\r\n        transformRequest: [(data) => data], // 전역 stringify 우회\r\n      });\r\n\r\n    try {\r\n      if (firstFile) {\r\n        // 1) image 필드로 시도\r\n        try {\r\n          await postWithAxios(makeForm(\"image\"));\r\n        } catch (e1) {\r\n          const status = e1?.response?.status;\r\n          if (status !== 400 && status !== 415 && status !== 422) throw e1;\r\n\r\n          // 2) file 필드로 재시도\r\n          try {\r\n            await postWithAxios(makeForm(\"file\"));\r\n          } catch (e2) {\r\n            const status2 = e2?.response?.status;\r\n            if (status2 !== 400 && status2 !== 415 && status2 !== 422) throw e2;\r\n\r\n            // 3) img 필드로 재시도\r\n            try {\r\n              await postWithAxios(makeForm(\"img\"));\r\n            } catch (e3) {\r\n              // 4) 최후: fetch로 전역 axios 설정 회피\r\n              const res = await fetch(url, {\r\n                method: \"POST\",\r\n                credentials: \"include\",\r\n                body: makeForm(\"image\"),\r\n              });\r\n              if (!res.ok) {\r\n                const txt = await res.text().catch(() => \"\");\r\n                throw new Error(txt || `업로드 실패 (${res.status})`);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // 파일이 없으면 request(JSON)만 담아 전송\r\n        await postWithAxios(makeForm(\"image\"));\r\n      }\r\n\r\n      alert(\"리뷰가 등록되었습니다.\");\r\n      navigate(\"/\"); // 메인 페이지로 이동\r\n    } catch (e) {\r\n      const msg =\r\n        e?.response?.data?.message ||\r\n        e?.response?.data?.error ||\r\n        e?.message ||\r\n        \"리뷰 등록 중 오류가 발생했습니다.\";\r\n      alert(msg);\r\n    }\r\n  };\r\n\r\n  const fileDisabled = !isReviewer || !missionId || images.length >= 10;\r\n  const filesCountLabel = images.length\r\n    ? `${images.length}개 선택됨 (서버 저장은 1장)`\r\n    : \"선택된 이미지 없음\";\r\n\r\n  return (\r\n    <div className=\"review-page\">\r\n      {/* 상단 제목만 유지 */}\r\n      <div className=\"review-toolbar\">\r\n        <h2 className=\"review-title\">리뷰 작성</h2>\r\n      </div>\r\n\r\n      {/* 작성 영역만 표시 */}\r\n      <div className={`review-input-container ${!isReviewer || !missionId ? \"disabled\" : \"\"}`}>\r\n        {loadingUser ? (\r\n          <div className=\"review-guard\">사용자 정보를 불러오는 중…</div>\r\n        ) : !missionId ? (\r\n          <div className=\"review-guard\">잘못된 접근입니다. (missionId가 없습니다)</div>\r\n        ) : !isReviewer ? (\r\n          <div className=\"review-guard\">리뷰어만 리뷰를 작성할 수 있습니다.</div>\r\n        ) : null}\r\n\r\n        {/* 별점 */}\r\n        <div className=\"star-rating\" role=\"radiogroup\" aria-label=\"별점 선택\">\r\n          {[1, 2, 3, 4, 5].map((v) => (\r\n            <button\r\n              key={v}\r\n              type=\"button\"\r\n              className={v <= rating ? \"star filled\" : \"star\"}\r\n              onClick={() => setRating(v)}\r\n              aria-pressed={v <= rating}\r\n              aria-label={`${v}점`}\r\n            >\r\n              ★\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* 내용 */}\r\n        <textarea\r\n          placeholder={`리뷰를 작성해주세요. (최소 10글자, 최대 ${MAX_REVIEW_LEN}글자)`}\r\n          className=\"review-textarea\"\r\n          value={text}\r\n          onChange={(e) => {\r\n            // 붙여넣기 등을 고려해 안전하게 컷오프\r\n            const v = (e.target.value || \"\").slice(0, MAX_REVIEW_LEN);\r\n            setText(v);\r\n          }}\r\n          maxLength={MAX_REVIEW_LEN}\r\n          disabled={!isReviewer || !missionId}\r\n          rows={10}\r\n          aria-describedby=\"review-length-helper\"\r\n        />\r\n        <div\r\n          id=\"review-length-helper\"\r\n          className={`review-length-helper ${text.length >= MAX_REVIEW_LEN ? \"error\" : \"\"}`}\r\n          aria-live=\"polite\"\r\n        >\r\n          {text.length} / {MAX_REVIEW_LEN}자\r\n        </div>\r\n\r\n        {/* 파일 업로드(서버는 1장만 저장) */}\r\n        <div className=\"review-file-row\">\r\n          <input\r\n            ref={fileInputRef}\r\n            id=\"review-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            multiple\r\n            onChange={handleImageChange}\r\n            className=\"review-file-input\"\r\n            disabled={fileDisabled}\r\n            title=\"최대 10장까지 선택 가능 (서버 저장은 1장)\"\r\n          />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"review-file-btn\"\r\n            onClick={() => !fileDisabled && fileInputRef.current?.click()}\r\n            disabled={fileDisabled}\r\n          >\r\n            <span className=\"btn-icon\" aria-hidden>\r\n              🖼️\r\n            </span>\r\n            이미지 선택\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"preview-btn\"\r\n            onClick={() => openGallery(\"preview\")}\r\n            disabled={!isReviewer || images.length === 0}\r\n          >\r\n            미리보기\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"preview-btn danger\"\r\n            onClick={() => openGallery(\"delete\")}\r\n            disabled={!isReviewer || images.length === 0}\r\n          >\r\n            삭제\r\n          </button>\r\n          <span className=\"file-name\" aria-live=\"polite\">\r\n            {filesCountLabel}\r\n          </span>\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleAddReview}\r\n          className=\"review-button\"\r\n          disabled={!isReviewer || !missionId}\r\n        >\r\n          등록\r\n        </button>\r\n      </div>\r\n\r\n      {/* 하단 갤러리 모달 (미리보기/삭제) */}\r\n      {galleryOpen && images.length > 0 && (\r\n        <div className=\"gallery-overlay\" aria-modal=\"true\" role=\"dialog\">\r\n          <div className=\"gallery-sheet small\" role=\"document\">\r\n            <div className=\"gallery-header\">\r\n              <span className=\"gallery-title\">\r\n                {galleryMode === \"delete\" ? \"이미지 삭제\" : \"이미지 미리보기\"}\r\n              </span>\r\n              <button\r\n                type=\"button\"\r\n                className=\"gallery-close\"\r\n                aria-label=\"닫기\"\r\n                onClick={closeGallery}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"gallery-body\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"gallery-nav left\"\r\n                onClick={prevImage}\r\n                aria-label=\"이전 이미지\"\r\n              >\r\n                ‹\r\n              </button>\r\n              <img\r\n                src={images[galleryIndex]?.previewUrl}\r\n                alt={`선택 이미지 ${galleryIndex + 1}/${images.length}`}\r\n                className=\"gallery-image small\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"gallery-nav right\"\r\n                onClick={nextImage}\r\n                aria-label=\"다음 이미지\"\r\n              >\r\n                ›\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"gallery-footer\">\r\n              <div className=\"gallery-count\">\r\n                {galleryIndex + 1} / {images.length}\r\n              </div>\r\n              {galleryMode === \"delete\" && (\r\n                <button type=\"button\" className=\"delete-btn\" onClick={deleteCurrentImage}>\r\n                  삭제하기\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// features/map/index.jsx\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Review from \"./Review\";\r\n\r\nexport default function MapFeature() {\r\n  return (\r\n    <div data-app=\"map\">\r\n      <Routes>\r\n        <Route index element={<Review />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ReviewPage","_images$galleryIndex","params","useSearchParams","missionId","get","navigate","useNavigate","MAX_REVIEW_LEN","user","setUser","useState","loadingUser","setLoadingUser","roleUp","role","toString","toUpperCase","isReviewer","useEffect","alive","data","api","withCredentials","_unused","text","setText","rating","setRating","images","setImages","fileInputRef","useRef","galleryOpen","setGalleryOpen","galleryMode","setGalleryMode","galleryIndex","setGalleryIndex","forEach","img","previewUrl","URL","revokeObjectURL","openGallery","mode","arguments","length","undefined","fileDisabled","filesCountLabel","concat","_jsxs","className","children","_jsx","map","v","type","onClick","placeholder","value","onChange","e","target","slice","maxLength","disabled","rows","id","ref","accept","multiple","files","Array","from","remain","Math","max","alert","next","file","Date","now","random","createObjectURL","prev","title","_fileInputRef$current","current","click","async","_images$","content","trim","url","encodeURIComponent","firstFile","makeForm","fileFieldName","fd","FormData","requestData","Number","jsonBlob","Blob","JSON","stringify","append","name","postWithAxios","headers","transformRequest","e1","_e1$response","status","response","e2","_e2$response","status2","e3","res","fetch","method","credentials","body","ok","txt","catch","Error","_e$response","_e$response$data","_e$response2","_e$response2$data","msg","message","error","closeGallery","prevImage","i","src","alt","nextImage","deleteCurrentImage","idx","tgt","arr","filter","_","MapFeature","Routes","Route","index","element","Review","path","Navigate","to","replace"],"sourceRoot":""}