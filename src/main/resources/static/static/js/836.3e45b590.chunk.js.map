{"version":3,"file":"static/js/836.3e45b590.chunk.js","mappings":"oJACA,IAAIA,EAAsB,K,sBCO1B,MAAMC,EAAgB,mCAEP,SAASC,EAAQC,GAA8C,IAA7C,gBAAEC,EAAe,eAAEC,EAAc,MAAEC,GAAOH,EACzE,MAAOI,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IAAIG,MAC5CC,EAAUC,IAAeL,EAAAA,EAAAA,WAAS,GAEnCM,GAASC,EAAAA,EAAAA,QAAO,MAChBC,GAAcD,EAAAA,EAAAA,QAAO,MACrBE,GAAeF,EAAAA,EAAAA,QAAO,MACtBG,GAAgBH,EAAAA,EAAAA,QAAO,MACvBI,GAAcJ,EAAAA,EAAAA,SAAO,GAErBK,GAAkBL,EAAAA,EAAAA,QAAO,IACzBM,GAAqBN,EAAAA,EAAAA,QAAOZ,IAClCmB,EAAAA,EAAAA,WAAU,KACRD,EAAmBE,QAAUpB,GAC5B,CAACA,IAGJ,MAAMqB,GAAiBT,EAAAA,EAAAA,QAAO,MACxBU,GAAoBV,EAAAA,EAAAA,QAAO,MAG3BW,GAAeX,EAAAA,EAAAA,QAAO,MACtBY,GAAgBZ,EAAAA,EAAAA,QAAO,MACvBa,GAAoBb,EAAAA,EAAAA,QAAO,MAC3Bc,GAAsBd,EAAAA,EAAAA,QAAO,MAE7Be,EAAkBA,KAClBL,EAAkBF,UACpBQ,aAAaN,EAAkBF,SAC/BE,EAAkBF,QAAU,MAE1BC,EAAeD,UACjBC,EAAeD,QAAQS,OAAO,MAC9BR,EAAeD,QAAU,OAmT7B,OA9SAD,EAAAA,EAAAA,WAAU,KACR,IAAIH,EAAYI,QA+DhB,OA9DAJ,EAAYI,SAAU,EAEtB,WAEE,MAAMU,QDpDG,SAAuBC,GAAS,IAADC,EAC5C,MAAsB,qBAAXC,OACFC,QAAQC,OAAO,IAAIC,MAAM,kCAElB,QAAhBJ,EAAIC,OAAOH,aAAK,IAAAE,GAAZA,EAAcK,KAAaH,QAAQI,QAAQL,OAAOH,OAClDlC,IAEJA,EAAsB,IAAIsC,QAAQ,CAACI,EAASH,KAC1C,MAAMI,EAAW,iBACXC,EAAWC,SAASC,eAAeH,GAE1B,IAADI,EAAd,GAAIH,EAEF,OAAgB,QAAhBG,EAAIV,OAAOH,aAAK,IAAAa,GAAZA,EAAcN,KAAaC,EAAQL,OAAOH,QAG9CU,EAASI,iBAAiB,OAAQ,IAAMN,EAAQL,OAAOH,OAAQ,CAAEe,MAAM,SACvEL,EAASI,iBAAiB,QAAS,IAAMT,EAAO,IAAIC,MAAM,uCAAwC,CAAES,MAAM,KAI5G,MAAMC,EAASL,SAASM,cAAc,UACtCD,EAAOE,GAAKT,EACZO,EAAOG,OAAQ,EAEfH,EAAOI,IAAG,gDAAAC,OAAmDpB,EAAM,gDACnEe,EAAOM,OAAS,KACd,IAAKnB,OAAOH,MAAO,OAAOK,EAAO,IAAIC,MAAM,mDAC3CH,OAAOH,MAAMO,KAAKgB,KAAK,IAAMf,EAAQL,OAAOH,SAE9CgB,EAAOQ,QAAU,IAAMnB,EAAO,IAAIC,MAAM,6BACxCK,SAASc,KAAKC,YAAYV,KAGrBlD,EACT,CCiB0B6D,CAAc5D,GAE5B6D,EAAYA,CAACC,EAAKC,KACtB,MAAMC,EAAY/C,EAAaM,QAC/B,IAAKyC,EAAW,OAEhB,MAAMC,EAAM,IAAIhC,EAAMO,KAAK0B,IAAIF,EAAW,CACxCG,OAAQ,IAAIlC,EAAMO,KAAK4B,OAAON,EAAKC,GACnCM,MAAO,IAETvD,EAAOS,QAAU0C,EACjBjD,EAAYO,QAAU,IAAIU,EAAMO,KAAK8B,SAASC,SAG9C1D,GAAY,GAEZ,MAAM2D,EAAuBA,CAACC,EAAQC,KAAQ,IAADC,EACxB,QAAnBA,EAAA3D,EAAYO,eAAO,IAAAoD,GAAnBA,EAAqBC,iBACnBH,EAAOI,SACPJ,EAAOK,SACPJ,IAGEK,EAAoBA,CAACC,EAAQC,KACjC,GAAIA,IAAWhD,EAAMO,KAAK8B,SAASY,OAAOC,GAAI,CAC5C,MAAMC,EAAKlE,EAAcK,QACzB,IAAK6D,EAAI,OACT,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,IACjC,GAA8B,MAA1BL,EAAOK,GAAGE,YAAqB,CACjCH,EAAGI,YAAcR,EAAOK,GAAGI,aAC3B,KACF,CAEJ,GAIFjB,EAAqBP,EAAIyB,YAAaX,GACtCrD,EAAaH,QAAU,IACrBiD,EAAqBP,EAAIyB,YAAaX,GACxC9C,EAAMO,KAAKmD,MAAMC,YAAY3B,EAAK,OAAQvC,EAAaH,SAGvDI,EAAcJ,QAAU,IAAMO,IAC9BF,EAAkBL,QAAU,IAAMO,IAClCD,EAAoBN,QAAU,IAAMO,IACpCG,EAAMO,KAAKmD,MAAMC,YAAY3B,EAAK,QAAStC,EAAcJ,SACzDU,EAAMO,KAAKmD,MAAMC,YAAY3B,EAAK,YAAarC,EAAkBL,SACjEU,EAAMO,KAAKmD,MAAMC,YAAY3B,EAAK,eAAgBpC,EAAoBN,UCtG/D,IAA4BsE,EAAWC,EAAXD,ED2GnC,CAAC/B,EAAKC,IAAQF,EAAUC,EAAKC,GC3GiB+B,ED4G9C,IAAMjC,EAAU,QAAS,SC3G1BkC,UAAUC,YAIfD,UAAUC,YAAYC,mBACnBC,GAAQL,EAAUK,EAAIzB,OAAO0B,SAAUD,EAAIzB,OAAO2B,WAClDC,IACCC,QAAQC,MAAM,0CAAaF,GACpB,OAAPP,QAAO,IAAPA,GAAAA,EAAUO,IAEZ,CAAEG,oBAAoB,EAAMC,QAAS,IAAMC,WAAY,IAThD,OAAPZ,QAAO,IAAPA,GAAAA,EAAU,IAAIvD,MAAM,6BD4GnB,EA1DD,GA4DO,KACL,MAAMN,EAAQG,OAAOH,MACjBA,GAASnB,EAAOS,UACdG,EAAaH,SACfU,EAAMO,KAAKmD,MAAMgB,eACf7F,EAAOS,QACP,OACAG,EAAaH,SAEbI,EAAcJ,SAChBU,EAAMO,KAAKmD,MAAMgB,eACf7F,EAAOS,QACP,QACAI,EAAcJ,SAEdK,EAAkBL,SACpBU,EAAMO,KAAKmD,MAAMgB,eACf7F,EAAOS,QACP,YACAK,EAAkBL,SAElBM,EAAoBN,SACtBU,EAAMO,KAAKmD,MAAMgB,eACf7F,EAAOS,QACP,eACAM,EAAoBN,UAG1BH,EAAgBG,QAAQqF,QAASC,GAAMA,EAAE7E,OAAO,OAChDZ,EAAgBG,QAAU,GAC1BO,IACAhB,EAAOS,QAAU,KACjBP,EAAYO,QAAU,KACtBV,GAAY,KAEb,KAGHS,EAAAA,EAAAA,WAAU,KACR,MAAMW,EAAQG,OAAOH,MACfgC,EAAMnD,EAAOS,QACdU,GAAUgC,GAAQrD,GACvBkG,WAAW,KACT7C,EAAI8C,WACJ9C,EAAI+C,UAAU/C,EAAIyB,cACjB,IACF,CAAC9E,KAGJU,EAAAA,EAAAA,WAAU,KACR,IAAI2F,GAAQ,EA4BZ,MA3BA,WACE,IACE,MAAM,KAAEC,SAAeC,EAAAA,GAAAA,IAAQ,gBACzBC,EAAOC,MAAMC,QAAQJ,GAAQA,GAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMK,QAAS,GACzD,IAAKN,EAAO,OAGZ,MAAMO,EAASC,GACP,OAANA,QAAoBC,IAAND,GAAyB,KAANA,OAAWC,EAAYC,OAAOF,GAC3DG,EAAO,IAAI1D,IACjB,IAAK,MAAM2D,KAAKT,EAAM,CAAC,IAADU,EACpB,MAAM3E,EAAS,QAAP2E,EAAGD,EAAE1E,UAAE,IAAA2E,EAAAA,EAAID,EAAEE,QAChB5E,IACAyE,EAAKI,IAAI7E,IACZyE,EAAKK,IAAI9E,GAAE+E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNL,GAAC,IACJ1E,KACAgD,SAAUqB,EAAO,OAADK,QAAC,IAADA,OAAC,EAADA,EAAG1B,UACnBC,UAAWoB,EAAO,OAADK,QAAC,IAADA,OAAC,EAADA,EAAGzB,cAG1B,CACA7F,EAAU8G,MAAMc,KAAKP,EAAKQ,UAC5B,CAAE,MAAAC,GACIpB,GAAO1G,EAAU,GACvB,CACD,EA1BD,GA2BO,KACL0G,GAAQ,IAET,KAGH3F,EAAAA,EAAAA,WAAU,KACR,IAAI2F,GAAQ,EAeZ,MAdA,WACE,IACE,MAAM,KAAEC,SAAeC,EAAAA,GAAAA,IAAQ,2BACzBC,EAAOC,MAAMC,QAAQJ,GAAQA,GAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMK,QAAS,GACnDU,EAAM,IAAItH,IAChB,IAAK,MAAMkG,KAAKO,EAAM,CAAC,IAADkB,EAAAC,EACpB,MAAMC,EAAkB,QAAfF,EAAI,OAADzB,QAAC,IAADA,GAAQ,QAAP0B,EAAD1B,EAAG4B,aAAK,IAAAF,OAAP,EAADA,EAAUpF,UAAE,IAAAmF,EAAAA,EAAK,OAADzB,QAAC,IAADA,OAAC,EAADA,EAAGkB,QAC3BS,GAAKP,EAAIS,IAAIf,OAAOa,GAC1B,CACIvB,GAAOvG,EAAeuH,EAC5B,CAAE,MAAAU,GACI1B,GAAOvG,EAAe,IAAIC,IAChC,CACD,EAbD,GAcO,KACLsG,GAAQ,IAET,KAGH3F,EAAAA,EAAAA,WAAU,KACR,MAAMW,EAAQG,OAAOH,MACfgC,EAAMnD,EAAOS,QACbqH,EAAW5H,EAAYO,QAC7B,IAAKU,IAAUgC,IAAQ2E,EAAU,OAGjCxH,EAAgBG,QAAQqF,QAASC,GAAMA,EAAE7E,OAAO,OAChDZ,EAAgBG,QAAU,GAG1B,MAAMsH,EACJ,2BACAC,mBAAmB,gbAOfC,EAAS,IAAI9G,EAAMO,KAAKwG,YAC5BH,EACA,IAAI5G,EAAMO,KAAKyG,KAAK,GAAI,IACxB,CAAEC,OAAQ,IAAIjH,EAAMO,KAAK2G,MAAM,GAAI,MAI/BC,EAAcA,CAACC,EAAQxB,KAC3B5F,EAAMO,KAAKmD,MAAMC,YAAYyD,EAAQ,QAAS,KAE5CvH,IAEA,MAAMgC,EAAM6D,OAAOE,EAAE1B,UACfpC,EAAM4D,OAAOE,EAAEzB,WAChBuB,OAAO2B,SAASxF,IAAS6D,OAAO2B,SAASvF,IAG9C6E,EAASW,cAAcxF,EAAKD,EAAK,CAAC0F,EAAKvE,KAAY,IAADwE,EAChD,IAAIC,EAAO,GACTC,EAAQ,GACiD,IAADC,EAAAC,EAAAC,EAAAC,EAAtD9E,IAAWhD,EAAMO,KAAK8B,SAASY,OAAOC,IAAS,OAAHqE,QAAG,IAAHA,GAAAA,EAAM,KACpDE,GACiC,QAA/BE,EAAAJ,EAAIQ,KAAMC,GAAMA,EAAEC,qBAAa,IAAAN,GAAc,QAAdC,EAA/BD,EAAiCM,oBAAY,IAAAL,OAAd,EAA/BA,EAA+CpE,eAAgB,GACjEkE,GAAc,QAANG,EAAAN,EAAI,UAAE,IAAAM,GAAS,QAATC,EAAND,EAAQK,eAAO,IAAAJ,OAAT,EAANA,EAAiBtE,eAAgB,IAIjB,QAA1BgE,EAAApI,EAAmBE,eAAO,IAAAkI,GAA1BA,EAAAW,KAAA/I,EAA6B,CAC3BgJ,QAAS,KACT5B,MAAOZ,EACP/D,MACAC,MACAoG,QAAS,CAAET,OAAMC,gBAOzB,IAAK,MAAM9B,KAAKvH,EAAQ,CACtB,MAAMwD,EAAM6D,OAAOE,EAAE1B,UACfpC,EAAM4D,OAAOE,EAAEzB,WACrB,IAAKuB,OAAO2B,SAASxF,KAAS6D,OAAO2B,SAASvF,GAAM,SAEpD,MAAMmC,EAAM,IAAIjE,EAAMO,KAAK4B,OAAON,EAAKC,GAGjCuG,EAAQ7J,EAAYuH,IAAIL,OAAOE,EAAE1E,KACjCkG,EAAS,IAAIpH,EAAMO,KAAK+H,QAAMrC,EAAAA,EAAAA,GAAC,CACnCsC,SAAUtE,EACVjC,MACAwG,MAAO5C,EAAE6C,WAAa7C,EAAE8C,MAAI,gBAAArH,OAAUuE,EAAE1E,IACxCyH,OAAQN,EAAQ,EAAI,GAChBA,EAAQ,CAAEO,MAAO9B,GAAW,CAAC,IAGnCK,EAAYC,EAAQxB,GACpBzG,EAAgBG,QAAQuJ,KAAKzB,EAC/B,GACC,CAAC/I,EAAQG,KAGZa,EAAAA,EAAAA,WAAU,KACR,MAAMW,EAAQG,OAAOH,MACfgC,EAAMnD,EAAOS,QACnB,GAAKU,GAAUgC,GAAQ7D,EAuBvB,MArBA,WACE,IACE,MAAM,KAAE8G,SAAeC,EAAAA,GAAAA,IAAQ,gBAAD7D,OAAiBlD,IACzCoH,EAASC,GACP,OAANA,QAAoBC,IAAND,GAAyB,KAANA,OAAWC,EAAYC,OAAOF,GAC3D3D,EAAM0D,EAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMf,UAClBpC,EAAMyD,EAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMd,WACxB,IAAKuB,OAAO2B,SAASxF,KAAS6D,OAAO2B,SAASvF,GAAM,OAEpD,MAAMmC,EAAM,IAAIjE,EAAMO,KAAK4B,OAAON,EAAKC,GACvCE,EAAI8G,MAAM7E,GAIVpE,GACF,CAAE,MAAOkJ,GAAI,IAADC,EACV3E,QAAQ4E,KAAK,uBAAwB,OAADF,QAAC,IAADA,GAAW,QAAVC,EAADD,EAAGG,gBAAQ,IAAAF,OAAV,EAADA,EAAa/D,OAAQ8D,EAC3D,CACD,EAlBD,GAqBO,KACDvJ,EAAkBF,UACpBQ,aAAaN,EAAkBF,SAC/BE,EAAkBF,QAAU,QAG/B,CAACnB,EAAgBQ,KAGpBU,EAAAA,EAAAA,WAAU,KACR,MAAMW,EAAQG,OAAOH,MACfgC,EAAMnD,EAAOS,QACnB,IAAKU,IAAUgC,IAAQ5D,EAAO,OAE9ByB,IAEA,MAAMgC,EAAM6D,OAAOtH,EAAMyD,KACnBC,EAAM4D,OAAOtH,EAAM0D,KACzB,IAAK4D,OAAO2B,SAASxF,KAAS6D,OAAO2B,SAASvF,GAAM,OAEpD,MAAMmC,EAAM,IAAIjE,EAAMO,KAAK4B,OAAON,EAAKC,GACvCE,EAAI8G,MAAM7E,IACT,CAAC7F,KAGF+K,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKpI,GAAG,MAAMqI,IAAKvK,EAAcoK,UAAU,gBAC3CD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,sFACxBC,EAAAA,EAAAA,KAAA,QAAMpI,GAAG,aAAaqI,IAAKtK,SAInC,CEzCA,QA1TA,SAAkBhB,GAAuC,IAAtC,QAAE6H,EAAO,QAAEoC,EAAO,cAAEsB,GAAevL,EACpD,MAAOwL,EAASC,IAAcnL,EAAAA,EAAAA,WAAS,IAChC6F,EAAKuF,IAAUpL,EAAAA,EAAAA,UAAS,KAExBiI,EAAOoD,IAAYrL,EAAAA,EAAAA,UAAS,OAC5BsL,EAASC,IAAcvL,EAAAA,EAAAA,UAAS,KAEhCwL,EAAWC,IAAgBzL,EAAAA,EAAAA,UAAS,OACpC0L,EAAaC,IAAkB3L,EAAAA,EAAAA,UAAS,OAExC4L,EAASC,IAAc7L,EAAAA,EAAAA,UAAS,KAChC8L,EAAaC,IAAkB/L,EAAAA,EAAAA,UAAS,IAGzCgH,EAASC,IACb,GAAU,OAANA,QAAoBC,IAAND,GAAyB,KAANA,EAAU,OAC/C,MAAM+E,EAAiB,kBAAN/E,EAAiBA,EAAIE,OAAOF,GAC7C,OAAOE,OAAO2B,SAASkD,GAAKA,OAAI9E,GAE5B+E,EAAUhF,IACd,GAAU,OAANA,QAAoBC,IAAND,GAAyB,KAANA,EAAU,OAAO,KACtD,GAAiB,kBAANA,EAAgB,CACzB,MACMiF,EAAI,IAAIC,KADHlF,EAAI,KAAOA,EAAQ,IAAJA,GAE1B,OAAOmF,MAAMF,GAAK,KAAOA,CAC3B,CACA,MAAMA,EAAI,IAAIC,KAAKE,OAAOpF,IAC1B,OAAOmF,MAAMF,GAAK,KAAOA,GAErBI,EAAWJ,IACf,MAAMK,EAAKN,EAAOC,GAClB,OAAOK,EAAKA,EAAGC,cAAcC,MAAM,EAAG,IAAM,MAyE9C3L,EAAAA,EAAAA,WAAU,KACR,IAAI2F,GAAQ,EAiFZ,OAAKc,GArEY3E,WACfuI,GAAW,GACXC,EAAO,IACP,IAEE,MAAQ1E,KAAMgG,SAAoB/F,EAAAA,GAAAA,IAAQ,gBAAD7D,OAAiBwF,mBAAmBN,KAC7E,IAAKvB,EAAO,OACZ4E,EAASqB,GAAa,MAGtB,IACE,MAAM,KAAEhG,SAAeC,EAAAA,GAAAA,IAAQ,gBAAD7D,OAAiBwF,mBAAmBN,GAAI,qBAChE2E,EAnFYtF,KACxB,IAAKA,EAAG,MAAO,GAIf,GAHAA,EAAIgF,OAAOhF,GAAGuF,OAGV,wGAAwBC,KAAKxF,GAAI,OAAOA,EAG5C,MAAMyF,EAAY,KAAKD,KAAKxF,IAAM,qBAAqBwF,KAAKxF,GACtD0F,EAAa,4CAAkCF,KAAKxF,GAC1D,OAAKA,GAAKyF,GAAaC,EAAmB,IAGtC1F,EAAEvC,OAAS,MAAKuC,EAAIA,EAAEoF,MAAM,EAAG,KAAKG,OAAS,UAC1CvF,IAqEY2F,CAAqB,OAAJtG,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,SAChC7E,GAAO8E,EAAWoB,EACxB,CAAE,MAAAM,GACIxG,GAAO8E,EAAW,GACxB,CAGA,IACE,MAAM2B,OAzEUtK,WACtB,MAAMuK,EAAW,CACfvK,gBAAmB+D,EAAAA,GAAAA,IAAQ,gBAAD7D,OAAiBwF,mBAAmBN,GAAI,sBAAqBtB,KACvF9D,gBAAmB+D,EAAAA,GAAAA,IAAQ,gBAAD7D,OAAiBwF,mBAAmBN,GAAI,YAAWtB,KAC7E9D,gBAAmB+D,EAAAA,GAAAA,IAAQ,gBAAD7D,OAAiBwF,mBAAmBN,GAAI,aAAYtB,MAEhF,IAAK,MAAMkD,KAAQuD,EACjB,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACF,MAAM5E,QAAYY,IACZiE,EAAqE,QAAlET,EAAmD,QAAnDC,EAAuC,QAAvCC,EAAiB,QAAjBC,EAAM,OAAHvE,QAAG,IAAHA,OAAG,EAAHA,EAAKwC,iBAAS,IAAA+B,EAAAA,EAAO,OAAHvE,QAAG,IAAHA,OAAG,EAAHA,EAAK8E,qBAAa,IAAAR,EAAAA,EAAO,OAAHtE,QAAG,IAAHA,OAAG,EAAHA,EAAK6E,WAAG,IAAAR,EAAAA,EAAO,OAAHrE,QAAG,IAAHA,OAAG,EAAHA,EAAK+E,cAAM,IAAAX,EAAAA,EAAI,KACzEY,EACkF,QAD7ER,EACyD,QADzDC,EAC2C,QAD3CC,EAC6B,QAD7BC,EACQ,QADRC,EACN,OAAH5E,QAAG,IAAHA,OAAG,EAAHA,EAAKiF,oBAAY,IAAAL,EAAAA,EAAO,OAAH5E,QAAG,IAAHA,OAAG,EAAHA,EAAKkF,oBAAY,IAAAP,EAAAA,EAAO,OAAH3E,QAAG,IAAHA,OAAG,EAAHA,EAAKgF,aAAK,IAAAN,EAAAA,EAAO,OAAH1E,QAAG,IAAHA,OAAG,EAAHA,EAAKmF,aAAK,IAAAV,EAAAA,EAAO,OAAHzE,QAAG,IAAHA,OAAG,EAAHA,EAAK0C,mBAAW,IAAA8B,EAAAA,EAAI,KAC5F,GAAmB,kBAARK,GAAqC,kBAAVG,EACpC,MAAO,CACLH,IAAoB,kBAARA,EAAmBA,EAAM,KACrCG,MAAwB,kBAAVA,EAAqBA,EAAQ,KAGjD,CAAE,MAAAnG,GAAO,CAGX,IACE,MAAM,KAAEnB,SAAeC,EAAAA,GAAAA,IAAQ,gBAAiB,CAC9CyH,OAAQ,CAAE7G,QAASS,EAAKvD,OAAQ,cAE5B4J,EAAOxH,MAAMC,QAAQJ,GAAQA,GAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMK,SAAa,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAM4H,UAAW,GAC1E,IAAKD,EAAKvJ,OAAQ,MAAO,CAAE+I,IAAK,KAAMG,MAAO,GAC7C,MAAMO,EAAMF,EAAKG,OAAO,CAACC,EAAKhF,KAAO,IAADiF,EAAAC,EAClC,MAAMC,EAAyB,QAAtBF,EAAW,QAAXC,EAAGlF,EAAEsE,cAAM,IAAAY,EAAAA,EAAIlF,EAAEoF,aAAK,IAAAH,EAAAA,EAAI,EAEnC,OAAOD,GADoB,kBAARG,EAAmBA,EAAMzH,OAAOyH,IAAQ,IAE1D,GAEH,MAAO,CAAEf,IADGiB,KAAKC,MAAOR,EAAMF,EAAKvJ,OAAU,IAAM,GACrCkJ,MAAOK,EAAKvJ,OAC5B,CAAE,MAAAqD,GACA,MAAO,CAAE0F,IAAK,KAAMG,MAAO,KAC7B,GAqCyBgB,CAAgBhH,GAC/BvB,IACFgF,EAAiC,kBAAbyB,EAAKW,IAAmBiB,KAAKC,MAAiB,GAAX7B,EAAKW,KAAY,GAAK,MAC7ElC,EAAqC,kBAAfuB,EAAKc,MAAqBd,EAAKc,MAAQ,MAEjE,CAAE,MAAAiB,GACIxI,IACFgF,EAAa,MACbE,EAAe,MAEnB,CAGA,IACE,MAAQjF,KAAMwI,SAAiBvI,EAAAA,GAAAA,IAAQ,iBAAkB,CACvDyH,OAAQ,CAAE7G,QAASS,KAEfpB,EAAOC,MAAMC,QAAQoI,GAAUA,GAAe,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQnI,QAAS,GACzDoI,EAAM,IAAIhD,KACViD,EAAOxI,EACVyI,OAAQhJ,GA5HD,SAACA,GAAyB,IAAtB8I,EAAGG,UAAAxK,OAAA,QAAAoC,IAAAoI,UAAA,GAAAA,UAAA,GAAG,IAAInD,KAC9B,MAAM9E,EAAI4E,EAAO5F,EAAEkJ,SAAWlJ,EAAEmJ,WAC1BhF,EAAIyB,EAAO5F,EAAEoJ,OAASpJ,EAAEqJ,SAC9B,QAAIrI,GAAKA,EAAI8H,MACT3E,GAAKA,EAAI2E,EAEf,CAsHyBQ,CAAUtJ,EAAG8I,IAC3B1L,IAAK4C,IAAC,IAAAuJ,EAAA,MAAM,CACXjN,GAAQ,QAANiN,EAAEvJ,EAAE1D,UAAE,IAAAiN,EAAAA,EAAIvJ,EAAEwJ,UACd5F,MAAO5D,EAAE4D,OAAS,eAClB6F,MAAOzJ,EAAEkJ,SAAWlJ,EAAEmJ,WAAa,KACnCO,IAAK1J,EAAEoJ,OAASpJ,EAAEqJ,SAAW,KAC7BM,KAAM3J,KAENI,GAAOoF,EAAWuD,EACxB,CAAE,MAAO5E,GACK,IAADC,EAAAwF,EAAX,GAAIxJ,EACFoF,EAAW,IACXE,GAAgB,OAADvB,QAAC,IAADA,GAAW,QAAVC,EAADD,EAAGG,gBAAQ,IAAAF,GAAM,QAANwF,EAAXxF,EAAa/D,YAAI,IAAAuJ,OAAhB,EAADA,EAAmBC,UAAW,2FAEjD,CACF,CAAE,MAAO1F,GACK,IAAD2F,EAAAC,EAAX,GAAI3J,EACF2E,GAAQ,OAADZ,QAAC,IAADA,GAAW,QAAV2F,EAAD3F,EAAGG,gBAAQ,IAAAwF,GAAM,QAANC,EAAXD,EAAazJ,YAAI,IAAA0J,OAAhB,EAADA,EAAmBF,UAAW,4FACrC7E,EAAS,MACTE,EAAW,IACXE,EAAa,MACbE,EAAe,MACfE,EAAW,GAEf,CAAC,QACKpF,GAAO0E,GAAW,EACxB,GAOFkF,CAAS9I,GAEF,KACLd,GAAQ,KArFR4E,EAAS,MACTE,EAAW,IACXE,EAAa,MACbE,EAAe,MACfE,EAAW,IACXT,EAAO,SACPW,EAAe,MAiFhB,CAACxE,IAEJ,MAAM2C,GAAiB,OAALjC,QAAK,IAALA,OAAK,EAALA,EAAOiC,aAAkB,OAALjC,QAAK,IAALA,OAAK,EAALA,EAAOkC,OAAQ,IAC/CmG,GACG,OAAP3G,QAAO,IAAPA,OAAO,EAAPA,EAAST,QACJ,OAALjB,QAAK,IAALA,OAAK,EAALA,EAAOsI,eACF,OAALtI,QAAK,IAALA,OAAK,EAALA,EAAO0B,WACF,OAAL1B,QAAK,IAALA,OAAK,EAALA,EAAOuI,gBACA,OAAP7G,QAAO,IAAPA,OAAO,EAAPA,EAASR,QACT,IAGIsH,EAAcpK,IAAO,IAADqK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxB,IAAKpG,GAAmB,OAAD5E,QAAC,IAADA,IAAAA,EAAG2J,KAAM,OAChC,MAAM1M,EAG2B,QAHxBoN,EAEU,QAFVC,EACe,QADfC,EACP5J,EAAW,OAALiB,QAAK,IAALA,OAAK,EAALA,EAAOtC,iBAAS,IAAAiL,EAAAA,EACtB5J,EAAW,OAALiB,QAAK,IAALA,OAAK,EAALA,EAAO3E,YAAI,IAAAqN,EAAAA,EACjB3J,EAAO,OAADX,QAAC,IAADA,GAAO,QAANwK,EAADxK,EAAG2J,YAAI,IAAAa,GAAO,QAAPC,EAAPD,EAAS5I,aAAK,IAAA6I,OAAb,EAADA,EAAgBnL,iBAAS,IAAA+K,EAAAA,EAC/B1J,EAAO,OAADX,QAAC,IAADA,GAAO,QAAN0K,EAAD1K,EAAG2J,YAAI,IAAAe,OAAN,EAADA,EAASpL,UACXpC,EAG4B,QAHzByN,EAEU,QAFVC,EACgB,QADhBC,EACPlK,EAAW,OAALiB,QAAK,IAALA,OAAK,EAALA,EAAOrC,kBAAU,IAAAsL,EAAAA,EACvBlK,EAAW,OAALiB,QAAK,IAALA,OAAK,EAALA,EAAO1E,YAAI,IAAA0N,EAAAA,EACjBjK,EAAO,OAADX,QAAC,IAADA,GAAO,QAAN8K,EAAD9K,EAAG2J,YAAI,IAAAmB,GAAO,QAAPC,EAAPD,EAASlJ,aAAK,IAAAmJ,OAAb,EAADA,EAAgBxL,kBAAU,IAAAoL,EAAAA,EAChChK,EAAO,OAADX,QAAC,IAADA,GAAO,QAANgL,EAADhL,EAAG2J,YAAI,IAAAqB,OAAN,EAADA,EAASzL,WAEjBqF,EAAc,CACZpB,QAASxD,EAAE2J,KACX1M,MACAC,MACAoG,UACA1B,WAIEqJ,EAA0C,kBAAhB5F,EAA2BW,OAAOX,GAAe,IAC3E6F,IAAejG,EAErB,OACEV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAa2G,KAAK,SAAS,aAAW,4BAAO1G,SAAA,EACxDvD,IAAWwD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAC,uFAC9CvD,GAAW2D,IAAWH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAC,uCACxDvD,IAAY2D,GAAWrF,IAAOkF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAEjF,IAEjE0B,IAAY2D,IAAYrF,IACvB+E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAE1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAEZ,KAC7Ba,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAEwF,KAE7BvF,EAAAA,EAAAA,KAAA,OACEF,UAAU,cACV,aAAyB,MAAbW,EAAiB,6BAAA1I,OAAY0I,EAAS,UAAM,yCAAWV,SAErD,MAAbU,GACCZ,EAAAA,EAAAA,MAAA6G,EAAAA,SAAA,CAAA3G,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAiBC,SAAEU,KACrCT,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oBAAmBC,SApNpCkB,KACb,MAAM/E,EAAI6H,KAAK4C,IAAI,EAAG5C,KAAK6C,IAAI,EAAG7C,KAAK8C,MAAMzK,OAAO6E,IAAM,KAC1D,MAAO,SAAI6F,OAAO5K,GAAK,SAAI4K,OAAO,EAAI5K,IAkNa4H,CAAMrD,QAG7C,yDAKJZ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAAC,6BAC3ByG,EAAa,GAAK,iBAAO,IAAE,IAAI,MAAI,IAAI,gCAAUD,KAGzDC,IACCxG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAgBZ,MAAOqB,EAAQR,SAC3CQ,QAMPP,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAGfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAAC,2CAErCgB,IAAef,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAEgB,KAEjDA,GAAkC,IAAnBF,EAAQ9G,SACvBiG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,SAAC,yFAKvDgB,GAAeF,EAAQ9G,OAAS,IAChCiG,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAAoBC,SAC/Bc,EAAQnI,IAAK4C,IACZuE,EAAAA,EAAAA,MAAA,MAEEC,UAAU,qBACViH,QAASA,IAAMrB,EAAWpK,GAC1B0L,UAAYvH,GAAgB,UAAVA,EAAEwH,KAAmBvB,EAAWpK,GAClDmL,KAAK,SACLS,SAAU,EACVhI,MAAO5D,EAAE4D,MACT,gBAAAnH,OAAeuD,EAAE4D,MAAK,iBAAMa,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SAAEzE,EAAE4D,SACxCW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,CACjCwB,EAAQjG,EAAEyJ,OAAO,MAAIxD,EAAQjG,EAAE0J,UAX7B1J,EAAE1D,eAsB3B,ECvTe,SAASuP,EAAYxS,GAAuC,IAAD0N,EAAAC,EAAAC,EAAAE,EAAA2E,EAAAC,EAAAC,EAAA5E,EAAAC,EAAAC,EAAAe,EAAAgC,EAAA4B,EAAA3B,EAAAK,EAAAC,EAAAsB,EAAAC,EAAAC,EAAA,IAArC,SAAEC,EAAQ,WAAEC,EAAa,UAAUjT,EACtE,MAAMkT,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,MACZC,GAAoB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWG,OAAQ,MAG7BC,EAAWC,IAAgBrT,EAAAA,EAAAA,WAAS,IACpCsT,EAASC,IAAcvT,EAAAA,EAAAA,UAAS,KAChCwT,EAAgBC,IAAqBzT,EAAAA,EAAAA,WAAS,IAC9C0T,EAAYC,IAAiB3T,EAAAA,EAAAA,UAAS,KAGtC4T,EAAYC,IAAiB7T,EAAAA,EAAAA,WAAS,IACtC8T,EAAiBC,IAAsB/T,EAAAA,EAAAA,UAAS,IAChDgU,EAAgBC,IAAqBjU,EAAAA,EAAAA,UAAS,IAG9CkU,EAAiBC,IAAsBnU,EAAAA,EAAAA,UAAS,IAAM,IAAIG,KAW3D0J,GAAkB,OAAR6I,QAAQ,IAARA,OAAQ,EAARA,EAAU7I,UAAW6I,GAAY,CAAC,EAC5CzK,GAAe,OAAP4B,QAAO,IAAPA,OAAO,EAAPA,EAAS5B,SAAiB,OAARyK,QAAQ,IAARA,OAAQ,EAARA,EAAUzK,QAAS,CAAC,EAE9CmM,EACJvK,EAAQwK,QACRxK,EAAQyK,WACRzK,EAAQuK,QACRvK,EAAQ0K,UACR1K,EAAQ2K,cACR,GAEIvK,EAAQJ,EAAQI,OAAS,eACzBwK,EAAO5K,EAAQ6K,aAAe7K,EAAQ4K,MAAQ,GAC9C3E,EAAQjG,EAAQ0F,SAAW1F,EAAQ2F,WAAa,GAChDO,EAAMlG,EAAQ4F,OAAS5F,EAAQ6F,SAAW,GAC1CiF,EAAgB9K,EAAQ8K,eAAiB9K,EAAQ+K,YAAc,GAE/DC,GAKa,QALPzH,EAIM,QAJNC,EAGI,QAHJC,EAES,QAFTE,EACkB,QADlB2E,EACVtI,EAAQiL,4BAAoB,IAAA3C,EAAAA,EAC5BtI,EAAQkL,mBAAW,IAAAvH,EAAAA,EACnB3D,EAAQgL,cAAM,IAAAvH,EAAAA,EACdzD,EAAQmL,gBAAQ,IAAA3H,EAAAA,EAChBxD,EAAQoL,iBAAS,IAAA7H,EAAAA,EACjB,KAEIlD,GAAYjC,EAAMiC,WAAajC,EAAMkC,MAAQN,EAAQK,WAAa,IAClEgL,IACI,OAARxC,QAAQ,IAARA,GAAiB,QAATN,EAARM,EAAU/I,eAAO,IAAAyI,OAAT,EAARA,EAAmBlJ,OACnBjB,EAAM0B,SACNE,EAAQF,UACA,OAAR+I,QAAQ,IAARA,GAAiB,QAATL,EAARK,EAAU/I,eAAO,IAAA0I,OAAT,EAARA,EAAmBlJ,QACnB,IAEI0G,GAMe,QANNpC,EAKM,QALNC,EAID,QAJCC,EAGI,QAHJe,EAEI,QAFJgC,EACH,QADG4B,EACbzI,EAAQlH,UAAE,IAAA2P,EAAAA,EACVzI,EAAQgG,iBAAS,IAAAa,EAAAA,EACjB7G,EAAQsL,iBAAS,IAAAzG,EAAAA,EACT,OAARgE,QAAQ,IAARA,OAAQ,EAARA,EAAU/P,UAAE,IAAAgL,EAAAA,EACJ,OAAR+E,QAAQ,IAARA,OAAQ,EAARA,EAAU7C,iBAAS,IAAAnC,EAAAA,EACX,OAARgF,QAAQ,IAARA,OAAQ,EAARA,EAAUyC,iBAAS,IAAA1H,EAAAA,EACnB,KAEIlG,GAKa,QALNoJ,EAIM,QAJNK,EAGI,QAHJC,EAEE,QAFFsB,EACH,QADGC,EACXvK,EAAMtF,UAAE,IAAA6P,EAAAA,EACRvK,EAAMV,eAAO,IAAAgL,EAAAA,EACb1I,EAAQtC,eAAO,IAAA0J,EAAAA,EACF,QADEwB,EACf5I,EAAQ5B,aAAK,IAAAwK,OAAA,EAAbA,EAAe9P,UAAE,IAAAqO,EAAAA,EACT,OAAR0B,QAAQ,IAARA,OAAQ,EAARA,EAAUnL,eAAO,IAAAoJ,EAAAA,EACjB,KAEIrE,GAAWJ,IACf,IAAKA,EAAG,MAAO,IACf,IACE,MAAMkJ,EAAK,IAAIjJ,KAAKD,GACpB,IAAKE,MAAMgJ,GAAK,OAAOA,EAAG5I,cAAcC,MAAM,EAAG,GACnD,CAAE,MAAA5E,GAAO,CACT,OAAOwE,OAAOH,GAAGO,MAAM,EAAG,KAiCtB4I,GAAmBC,IACvB,IAAKA,EAAG,MAAO,GACf,MAAMjO,EAAIgF,OAAOiJ,GAAG1I,OACpB,IAAKvF,EAAG,MAAO,GACf,GAAI,mBAAmBwF,KAAKxF,IAAM,iBAAiBwF,KAAKxF,GAAI,OAAOA,EACnE,MAAMkO,GAAQC,EAAAA,IAAY,IAAI5I,OACxB6I,EAA2B,qBAAX7T,OAAyBA,OAAOkR,SAAS2C,OAAS,GAExE,MAAM,GAAN3S,QADeyS,GAAQE,GAAU,IAChBC,QAAQ,OAAQ,IAAG,KAAA5S,OAAIuE,EAAEqO,QAAQ,OAAQ,MAItDC,GAAmBlM,IAAO,IAADmM,EAAAC,EAAAlH,EAAAmH,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,MAAMC,EACJ1M,EAAE0M,UAAY1M,EAAE2M,UAAY3M,EAAE4M,WAAkB,QAAVT,EAAInM,EAAE0J,YAAI,IAAAyC,OAAA,EAANA,EAAQzL,OAAQ,qBACtDmM,EAA+B,QAAtBT,EAAW,QAAXlH,EAAGlF,EAAEsE,cAAM,IAAAY,EAAAA,EAAIlF,EAAEoF,aAAK,IAAAgH,EAAAA,EAAI,EACnC9H,EACiB,kBAAduI,EAAyBA,EAAYnP,OAAOmP,IAAc,EAC7D3J,EAA0B,QAAtBmJ,EAAS,QAATC,EAAGtM,EAAEkD,YAAI,IAAAoJ,EAAAA,EAAItM,EAAE6E,eAAO,IAAAwH,EAAAA,EAAI,GAC9BnT,EACuB,QADrBqT,EACY,QADZC,EACF,QADEC,EACNzM,EAAE9G,UAAE,IAAAuT,EAAAA,EAAIzM,EAAE8M,gBAAQ,IAAAN,EAAAA,EAAIxM,EAAE+M,WAAG,IAAAR,EAAAA,EAAIlH,KAAK2H,SAASC,SAAS,IAAIjK,MAAM,GAElE,IAAIkK,EAAS,GACT9P,MAAMC,QAAQ2C,EAAEkN,QAASA,EAASlN,EAAEkN,OAAOtH,OAAOuH,SAC7C/P,MAAMC,QAAQ2C,EAAEoN,QAASF,EAASlN,EAAEoN,OAAOxH,OAAOuH,SAClD/P,MAAMC,QAAQ2C,EAAEqN,SAAUH,EAASlN,EAAEqN,QAAQzH,OAAOuH,UACpDnN,EAAE4K,QAAU5K,EAAE8K,UAAY9K,EAAEsN,YACnCJ,EAAS,CAAClN,EAAE4K,QAAU5K,EAAE8K,UAAY9K,EAAEsN,UAAU1H,OAAOuH,UAOzD,MAAO,CAAEjU,KAAIwT,WAAUpI,SAAQpB,OAAMgK,OAJzB9P,MAAMc,KAChB,IAAIxH,IAAIwW,EAAOlT,IAAK6R,GAAMD,GAAgBC,IAAIjG,OAAOuH,cAOzD9V,EAAAA,EAAAA,WAAU,KACR,IAAKsS,IAAc7L,GAAS,OAC5B,IAAId,GAAQ,EA0BZ,MAzBA,WACEgN,GAAkB,GAClBE,EAAc,IACd,IACE,MAAM,KAAEjN,SAAeC,EAAAA,GAAAA,IAAQ,gBAAiB,CAAEyH,OAAQ,CAAE7G,cACtD8G,EAAOxH,MAAMC,QAAQJ,GACvBA,GACI,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMK,SAAa,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAM4H,UAAW,GACpC,IAAK7H,EAAO,OACZ,MAAMuQ,EAAa3I,EAAK5K,IAAIkS,IAC5BpC,EAAWyD,GAIX7C,EAAmB,IAAIhU,IACzB,CAAE,MAAOqK,GAAI,IAADC,EAAAwF,EACV,IAAKxJ,EAAO,OACZ8M,EAAW,IACXI,GACG,OAADnJ,QAAC,IAADA,GAAW,QAAVC,EAADD,EAAGG,gBAAQ,IAAAF,GAAM,QAANwF,EAAXxF,EAAa/D,YAAI,IAAAuJ,OAAhB,EAADA,EAAmBC,UAAW,8EAElC,CAAC,QACKzJ,GAAOgN,GAAkB,EAC/B,CACD,EAxBD,GAyBO,KACLhN,GAAQ,IAET,CAAC2M,EAAW7L,KAGf,MAAM0P,GAAgB,SAACC,GAA6B,IAAlBC,EAAQ7H,UAAAxK,OAAA,QAAAoC,IAAAoI,UAAA,GAAAA,UAAA,GAAG,EAC3C,MAAM7F,EAAI6J,EAAQ4D,GACbzN,GAAM5C,MAAMC,QAAQ2C,EAAEkN,SAA+B,IAApBlN,EAAEkN,OAAO7R,SAC/CiP,EAAmBmD,GACnBjD,EAAkBnF,KAAK4C,IAAI,EAAG5C,KAAK6C,IAAIwF,EAAU1N,EAAEkN,OAAO7R,OAAS,KACnE+O,GAAc,GAChB,EAEMuD,GAAcA,IAAMvD,GAAc,GAElCwD,IAAgBC,EAAAA,EAAAA,SAAQ,KAC5B,MAAM7N,EAAI6J,EAAQQ,GAClB,OAAOjN,MAAMC,QAAS,OAAD2C,QAAC,IAADA,OAAC,EAADA,EAAGkN,QAAUlN,EAAEkN,OAAS,IAC5C,CAACrD,EAASQ,IAWPyD,KAAe1H,GAGrB,OAAK6C,GASH9H,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,KAAA,UACEyM,KAAK,SACL3M,UAAU,kBACViH,QA3HU2F,KACXlQ,GAIL8L,GAAa,GAHXqE,MAAM,8EA0HFC,UAAWpQ,GACX0C,MAAO1C,GAAU,sDAAgB,2DAAcuD,SAChD,8CAMHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SACxBsJ,GACCrJ,EAAAA,EAAAA,KAAA,OACElI,IAAKwS,GAAgBjB,GACrBwD,IAAG,GAAA9U,OAAKmH,EAAK,uBACbY,UAAU,aACVvF,QAAUkF,IACRA,EAAEqN,cAAcC,MAAMC,QAAU,WAIpChN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAAC,uCAKxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAEyM,GAAatN,EAAQC,MAE7CU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,kBACxBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SACpByM,IACC3M,EAAAA,EAAAA,MAAA6G,EAAAA,SAAA,CAAA3G,SAAA,CACGwB,GAAQwD,GAAO,MAAIxD,GAAQyD,OAG9BhF,EAAAA,EAAAA,KAAA0G,EAAAA,SAAA,CAAA3G,SAAE,YAKRF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,+BACxBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SACpByM,IAAa5C,GAAuB,UAIzC/J,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,+BACxBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAEyM,IAAmB,OAAN1C,SAAM,IAANA,GAAAA,GAAgB,UAGxDjK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,wBACxBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAEZ,SAG3BU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,kBACxBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAEoK,QAG1BqC,GACC9C,IACE7J,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,kBACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAE2J,QAI5B7J,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,kBACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,qFAI3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAAA,UACEyM,KAAK,SACL3M,UAAU,oBACViH,QAjOSkG,KACjB,IAAKnI,GAEH,YADA6H,MAAM,gIAGR,MAAMO,EAAU,qBAAAnV,OAAwBwF,mBAAmBuH,KACtDqD,EAILN,EAASqF,EAAY,CACnBC,MAAO,CACLrI,aACA5F,QACAC,aACAgL,aACAvN,KAAMmL,EAASqF,SAAWrF,EAASsF,UATrCxF,EAAS,GAAD9P,OAAI6P,EAAU,UAAA7P,OAASwF,mBAAmB2P,MA2N5CN,UAAW9H,GACX5F,MACE4F,GACI,mEACA,wFACL/E,SACF,mCAOJsI,IACCxI,EAAAA,EAAAA,MAAA,OACEC,UAAU,oBACViH,QAASA,IAAMuB,GAAa,GAAOvI,SAAA,EAEnCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAWiH,QAAUtH,GAAMA,EAAE6N,kBAAkBvN,SAAA,EAE5DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,4CACRC,EAAAA,EAAAA,KAAA,UACEyM,KAAK,SACL1F,QAASA,IAAMuB,GAAa,GAC5BxI,UAAU,kBAAiBC,SAC5B,qBAMHC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAC3B0I,GAAqC,IAAnBF,EAAQxO,QACzBiG,EAAAA,EAAAA,KAAA,OAAK+M,MAAO,CAAEQ,MAAO,QAASxN,SAAC,uDAC7B4I,GACF3I,EAAAA,EAAAA,KAAA,OAAK+M,MAAO,CAAEQ,MAAO,QAASxN,SAAE4I,IACX,IAAnBJ,EAAQxO,QACViG,EAAAA,EAAAA,KAAA,OAAK+M,MAAO,CAAEQ,MAAO,QAASxN,SAAC,qEAE/BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC5BwI,EAAQ7P,IAAI,CAACgG,EAAG8O,KAAQ,IAADC,EAAAC,EACtB,MAAMC,EAAaxE,EAAgB1M,IAAIiC,EAAE9G,IACzC,OACEiI,EAAAA,EAAAA,MAAA,WAEEC,UAAS,kBAAA/H,OAA4B,QAAR0V,EAAA/O,EAAEkN,cAAM,IAAA6B,GAARA,EAAU1T,OAAS,eAAiB,IACjEgN,QAASA,KAAA,IAAA6G,EAAA,OAAc,QAARA,EAAAlP,EAAEkN,cAAM,IAAAgC,OAAA,EAARA,EAAU7T,SAAUmS,GAAcsB,EAAI,IACrDtO,MAAe,QAARwO,EAAAhP,EAAEkN,cAAM,IAAA8B,GAARA,EAAU3T,OAAS,0DAAeoC,EAAU4D,SAAA,EAEnDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,iBAAgBC,SAAErB,EAAE0M,YACtCvL,EAAAA,EAAAA,MAAA,QAAMC,UAAU,kBAAkB,6BAAA/H,OAAkB2G,EAAEsE,OAAM,UAAIjD,SAAA,CAC7D,SAAI+G,OAAO/C,KAAK4C,IAAI,EAAG5C,KAAK8C,MAAMnI,EAAEsE,QAAU,KAC9C,SAAI8D,OAAO/C,KAAK4C,IAAI,EAAG,EAAI5C,KAAK8C,MAAMnI,EAAEsE,QAAU,WAItDtE,EAAEkD,OACD/B,EAAAA,EAAAA,MAAA,OAAKC,UAAS,uBAAA/H,OAAyB4V,EAAa,WAAa,aAAc5N,SAAA,EAC7EC,EAAAA,EAAAA,KAAA,KACEpI,GAAE,WAAAG,OAAa2G,EAAE9G,IACjBkI,UAAS,kBAAA/H,OAAoB4V,EAAa,GAAK,WAAY5N,SAE1DrB,EAAEkD,QAIH+L,IAAc3N,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAe,oBAE9CE,EAAAA,EAAAA,KAAA,UACEyM,KAAK,SACL3M,UAAU,cACViH,QAAUtH,IAhXV7H,MAiXE6H,EAAE6N,kBAjXJ1V,EAkXqB8G,EAAE9G,GAjXjDwR,EAAoByE,IAClB,MAAMC,EAAO,IAAI1Y,IAAIyY,GAGrB,OAFIC,EAAKrR,IAAI7E,GAAKkW,EAAKC,OAAOnW,GACzBkW,EAAK3Q,IAAIvF,GACPkW,KA+WiB,gBAAeH,EACf,2BAAA5V,OAA0B2G,EAAE9G,IAC5BsH,MAAOyO,EAAa,eAAO,kCAAS5N,SAEnC4N,EAAa,eAAO,uCAK1B7R,MAAMC,QAAQ2C,EAAEkN,SAAWlN,EAAEkN,OAAO7R,OAAS,IAC5CiG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC5BrB,EAAEkN,OAAOlT,IAAI,CAACZ,EAAKgC,KAClBkG,EAAAA,EAAAA,KAAA,OAEElI,IAAKA,EACL+U,IAAI,kCACJ/M,UAAU,WACVK,QAAQ,OACR4G,QAAUtH,IACRA,EAAE6N,kBACFpB,GAAcsB,EAAI1T,IAEpBS,QAAUkF,IACRA,EAAEqN,cAAcC,MAAMC,QAAU,SAV7BlT,QA7CR4E,EAAE9G,aAsEpBiR,GAAcyD,GAAcvS,OAAS,IACpCiG,EAAAA,EAAAA,KAAA,OACEF,UAAU,qBACViH,QAASsF,GAAYtM,UAErBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYiH,QAAUtH,GAAMA,EAAE6N,kBAAkBvN,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UACEyM,KAAK,SACL3M,UAAU,kBACV,aAAW,eACXiH,QAASsF,MAEXrM,EAAAA,EAAAA,KAAA,UACEyM,KAAK,SACL3M,UAAU,qBACV,aAAW,kCACXiH,QAhPQiH,KACjB1B,GAAcvS,QACnBmP,EAAmBpP,IAAOA,EAAI,EAAIwS,GAAcvS,QAAUuS,GAAcvS,SA8OjCgG,SAC1B,YAGDC,EAAAA,EAAAA,KAAA,OACElI,IAAKwU,GAAcrD,GACnB4D,IAAG,mCAAA9U,OAAYkR,EAAiB,EAAC,KAAAlR,OAAIuU,GAAcvS,QACnD+F,UAAU,gBACVvF,QAAUkF,IACRA,EAAEqN,cAAcC,MAAMC,QAAU,WAGpChN,EAAAA,EAAAA,KAAA,UACEyM,KAAK,SACL3M,UAAU,sBACV,aAAW,kCACXiH,QA5PQkH,KACjB3B,GAAcvS,QACnBmP,EAAmBpP,IAAOA,EAAI,GAAKwS,GAAcvS,SA0PVgG,SAC1B,YAGDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC7BkJ,EAAiB,EAAE,MAAIqD,GAAcvS,sBAvPlDiG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,8DA+PtC,CCzde,SAASmO,IAAY,IAADvZ,EAAA0N,EAAAC,EAAA6L,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEjC,MAAO7G,EAAU8G,IAAexZ,EAAAA,EAAAA,UAAS,OAElCoO,IAAUqL,EAAAA,EAAAA,MACXC,EAAetL,EAAOuL,IAAI,WAC1B/Z,EAAiB8Z,EAAevS,OAAOuS,GAAgB,KAGvDE,GAAsBC,EAAAA,EAAAA,aAAaC,IACvCN,EAAYM,IACX,IAGGC,EAIsB,QAJRra,EAGU,QAHV0N,EAEM,QAFNC,EACC,QADD6L,EACV,OAARxG,QAAQ,IAARA,GAAe,QAAPyG,EAARzG,EAAUzK,aAAK,IAAAkR,OAAP,EAARA,EAAiBxW,UAAE,IAAAuW,EAAAA,EACX,OAARxG,QAAQ,IAARA,GAAe,QAAP0G,EAAR1G,EAAUzK,aAAK,IAAAmR,OAAP,EAARA,EAAiB7R,eAAO,IAAA8F,EAAAA,EAChB,OAARqF,QAAQ,IAARA,GAAiB,QAAT2G,EAAR3G,EAAU7I,eAAO,IAAAwP,GAAO,QAAPC,EAAjBD,EAAmBpR,aAAK,IAAAqR,OAAhB,EAARA,EAA0B3W,UAAE,IAAAyK,EAAAA,EACpB,OAARsF,QAAQ,IAARA,GAAiB,QAAT6G,EAAR7G,EAAU7I,eAAO,IAAA0P,OAAT,EAARA,EAAmBhS,eAAO,IAAA7H,EAAAA,EAC1B,KAEF,OAEEkL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAACiP,EAAS,CACRzS,QAASwS,EACTpQ,QAAiB,OAAR+I,QAAQ,IAARA,OAAQ,EAARA,EAAU/I,QAEnBsB,cAAe2O,OAKnB7O,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAACtL,EAAQ,CACPG,eAAgBA,EAChBC,MAAO6S,EACP/S,gBAAiBia,UAMvB7O,EAAAA,EAAAA,KAACmH,EAAY,CAACQ,SAAUA,MAG9B,CCrDe,SAASuH,IACtB,OACElP,EAAAA,EAAAA,KAAA,OAAK,WAAS,MAAKD,UACjBF,EAAAA,EAAAA,MAACsP,EAAAA,GAAM,CAAApP,SAAA,EACLC,EAAAA,EAAAA,KAACoP,EAAAA,GAAK,CAACC,OAAK,EAACC,SAAStP,EAAAA,EAAAA,KAACkO,EAAQ,OAC/BlO,EAAAA,EAAAA,KAACoP,EAAAA,GAAK,CAACG,KAAK,IAAID,SAAStP,EAAAA,EAAAA,KAACwP,EAAAA,GAAQ,CAACC,GAAG,IAAI9E,SAAO,UAIzD,C","sources":["features/eventMap/map/KakaoLoader.js","features/eventMap/map/KaKaoMap.js","features/eventMap/map/Location.js","features/eventMap/eventList/EventList.js","features/eventMap/eventContent/EventContent.js","features/eventMap/EventMap.js","features/eventMap/index.js"],"sourcesContent":["// src/features/eventMap/map/KakaoLoader.js\r\nlet kakaoLoadingPromise = null;\r\n\r\nexport default function loadKakaoMaps(appKey) {\r\n  if (typeof window === \"undefined\") {\r\n    return Promise.reject(new Error(\"Kakao SDK must run in browser\"));\r\n  }\r\n  if (window.kakao?.maps) return Promise.resolve(window.kakao);\r\n  if (kakaoLoadingPromise) return kakaoLoadingPromise;\r\n\r\n  kakaoLoadingPromise = new Promise((resolve, reject) => {\r\n    const scriptId = \"kakao-maps-sdk\";\r\n    const existing = document.getElementById(scriptId);\r\n\r\n    if (existing) {\r\n      // 이미 로드 완료라면 즉시 resolve\r\n      if (window.kakao?.maps) return resolve(window.kakao);\r\n\r\n      // 아직 로딩 중이면 load/error 대기\r\n      existing.addEventListener(\"load\", () => resolve(window.kakao), { once: true });\r\n      existing.addEventListener(\"error\", () => reject(new Error(\"Failed to load Kakao SDK(existing)\")), { once: true });\r\n      return;\r\n    }\r\n\r\n    const script = document.createElement(\"script\");\r\n    script.id = scriptId;\r\n    script.async = true;\r\n    // https 고정 권장 (혼합콘텐츠 방지)\r\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${appKey}&libraries=services,clusterer&autoload=false`;\r\n    script.onload = () => {\r\n      if (!window.kakao) return reject(new Error(\"Kakao SDK loaded but window.kakao is undefined\"));\r\n      window.kakao.maps.load(() => resolve(window.kakao));\r\n    };\r\n    script.onerror = () => reject(new Error(\"Failed to load Kakao SDK\"));\r\n    document.head.appendChild(script);\r\n  });\r\n\r\n  return kakaoLoadingPromise;\r\n}\r\n","/* eslint-env browser */\r\n/* src/features/eventMap/map/KaKaoMap.js */\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport loadKakaoMaps from \"./KakaoLoader\";\r\nimport getCurrentLocation from \"./Location\";\r\nimport api from \"../../../api\";\r\nimport \"./MapStyle.css\";\r\n\r\nconst KAKAO_APP_KEY = \"261b88294b81d5800071641ecc633dcb\";\r\n\r\nexport default function KaKaoMap({ onMissionSelect, storeIdToFocus, focus }) {\r\n  const [stores, setStores] = useState([]);\r\n  const [hotStoreIds, setHotStoreIds] = useState(new Set()); // 진행 가능한 미션 매장\r\n  const [mapReady, setMapReady] = useState(false); // ✅ 지도 초기화 완료 신호\r\n\r\n  const mapRef = useRef(null);\r\n  const geocoderRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const centerAddrRef = useRef(null);\r\n  const initialized = useRef(false);\r\n\r\n  const storeMarkersRef = useRef([]);\r\n  const onMissionSelectRef = useRef(onMissionSelect);\r\n  useEffect(() => {\r\n    onMissionSelectRef.current = onMissionSelect;\r\n  }, [onMissionSelect]);\r\n\r\n  // 메인 진입 강조용 포커스 마커 & 타이머 (초기 생성/표시는 하지 않음)\r\n  const focusMarkerRef = useRef(null);\r\n  const focusHideTimerRef = useRef(null);\r\n\r\n  // 지도 이벤트 핸들러 참조(정리용)\r\n  const onMapIdleRef = useRef(null);\r\n  const onMapClickRef = useRef(null);\r\n  const onMapDragStartRef = useRef(null);\r\n  const onMapZoomChangedRef = useRef(null);\r\n\r\n  const hideFocusMarker = () => {\r\n    if (focusHideTimerRef.current) {\r\n      clearTimeout(focusHideTimerRef.current);\r\n      focusHideTimerRef.current = null;\r\n    }\r\n    if (focusMarkerRef.current) {\r\n      focusMarkerRef.current.setMap(null);\r\n      focusMarkerRef.current = null;\r\n    }\r\n  };\r\n\r\n  // 1) 지도 초기화\r\n  useEffect(() => {\r\n    if (initialized.current) return;\r\n    initialized.current = true;\r\n\r\n    (async () => {\r\n      // ✅ 항상 SDK를 먼저 로드\r\n      const kakao = await loadKakaoMaps(KAKAO_APP_KEY);\r\n\r\n      const initMapAt = (lat, lng) => {\r\n        const container = containerRef.current;\r\n        if (!container) return;\r\n\r\n        const map = new kakao.maps.Map(container, {\r\n          center: new kakao.maps.LatLng(lat, lng),\r\n          level: 3,\r\n        });\r\n        mapRef.current = map;\r\n        geocoderRef.current = new kakao.maps.services.Geocoder();\r\n\r\n        // ✅ 지도 준비 완료 플래그\r\n        setMapReady(true);\r\n\r\n        const searchAddrFromCoords = (coords, cb) => {\r\n          geocoderRef.current?.coord2RegionCode(\r\n            coords.getLng(),\r\n            coords.getLat(),\r\n            cb\r\n          );\r\n        };\r\n        const displayCenterInfo = (result, status) => {\r\n          if (status === kakao.maps.services.Status.OK) {\r\n            const el = centerAddrRef.current;\r\n            if (!el) return;\r\n            for (let i = 0; i < result.length; i++) {\r\n              if (result[i].region_type === \"H\") {\r\n                el.textContent = result[i].address_name;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        // 중심 주소 표시\r\n        searchAddrFromCoords(map.getCenter(), displayCenterInfo);\r\n        onMapIdleRef.current = () =>\r\n          searchAddrFromCoords(map.getCenter(), displayCenterInfo);\r\n        kakao.maps.event.addListener(map, \"idle\", onMapIdleRef.current);\r\n\r\n        // 강조 마커를 쉽게 숨기기 위한 사용자 이벤트\r\n        onMapClickRef.current = () => hideFocusMarker();\r\n        onMapDragStartRef.current = () => hideFocusMarker();\r\n        onMapZoomChangedRef.current = () => hideFocusMarker();\r\n        kakao.maps.event.addListener(map, \"click\", onMapClickRef.current);\r\n        kakao.maps.event.addListener(map, \"dragstart\", onMapDragStartRef.current);\r\n        kakao.maps.event.addListener(map, \"zoom_changed\", onMapZoomChangedRef.current);\r\n      };\r\n\r\n      // ✅ 위치 성공/실패와 무관하게 반드시 초기화되도록\r\n      getCurrentLocation(\r\n        (lat, lng) => initMapAt(lat, lng),\r\n        () => initMapAt(37.5665, 126.9780) // 실패 시 기본 좌표(서울시청)\r\n      );\r\n    })();\r\n\r\n    return () => {\r\n      const kakao = window.kakao;\r\n      if (kakao && mapRef.current) {\r\n        if (onMapIdleRef.current)\r\n          kakao.maps.event.removeListener(\r\n            mapRef.current,\r\n            \"idle\",\r\n            onMapIdleRef.current\r\n          );\r\n        if (onMapClickRef.current)\r\n          kakao.maps.event.removeListener(\r\n            mapRef.current,\r\n            \"click\",\r\n            onMapClickRef.current\r\n          );\r\n        if (onMapDragStartRef.current)\r\n          kakao.maps.event.removeListener(\r\n            mapRef.current,\r\n            \"dragstart\",\r\n            onMapDragStartRef.current\r\n          );\r\n        if (onMapZoomChangedRef.current)\r\n          kakao.maps.event.removeListener(\r\n            mapRef.current,\r\n            \"zoom_changed\",\r\n            onMapZoomChangedRef.current\r\n          );\r\n      }\r\n      storeMarkersRef.current.forEach((m) => m.setMap(null));\r\n      storeMarkersRef.current = [];\r\n      hideFocusMarker();\r\n      mapRef.current = null;\r\n      geocoderRef.current = null;\r\n      setMapReady(false); // ✅ 언마운트 시 플래그 해제\r\n    };\r\n  }, []);\r\n\r\n  // ✅ 지도 준비되면 한번 relayout (탭/모달/레이아웃 변화 대비)\r\n  useEffect(() => {\r\n    const kakao = window.kakao;\r\n    const map = mapRef.current;\r\n    if (!kakao || !map || !mapReady) return;\r\n    setTimeout(() => {\r\n      map.relayout();\r\n      map.setCenter(map.getCenter());\r\n    }, 0);\r\n  }, [mapReady]);\r\n\r\n  // 2) 모든 매장 불러오기\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(\"/itda/stores\");\r\n        const list = Array.isArray(data) ? data : data?.items || [];\r\n        if (!alive) return;\r\n\r\n        // 숫자 보정 + 중복 제거(id 기준)\r\n        const toNum = (v) =>\r\n          v === null || v === undefined || v === \"\" ? undefined : Number(v);\r\n        const uniq = new Map();\r\n        for (const s of list) {\r\n          const id = s.id ?? s.storeId;\r\n          if (!id) continue;\r\n          if (!uniq.has(id)) {\r\n            uniq.set(id, {\r\n              ...s,\r\n              id,\r\n              latitude: toNum(s?.latitude),\r\n              longitude: toNum(s?.longitude),\r\n            });\r\n          }\r\n        }\r\n        setStores(Array.from(uniq.values()));\r\n      } catch {\r\n        if (alive) setStores([]);\r\n      }\r\n    })();\r\n    return () => {\r\n      alive = false;\r\n    };\r\n  }, []);\r\n\r\n  // 2-B) 진행 가능한 미션이 있는 매장 목록(Set) 불러오기 → 빨간 마커 표시용\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(\"/itda/missions/joinable\");\r\n        const list = Array.isArray(data) ? data : data?.items || [];\r\n        const set = new Set();\r\n        for (const m of list) {\r\n          const sid = m?.store?.id ?? m?.storeId;\r\n          if (sid) set.add(Number(sid));\r\n        }\r\n        if (alive) setHotStoreIds(set);\r\n      } catch {\r\n        if (alive) setHotStoreIds(new Set());\r\n      }\r\n    })();\r\n    return () => {\r\n      alive = false;\r\n    };\r\n  }, []);\r\n\r\n  // 3) 매장 마커 렌더링 (매장당 1개)\r\n  useEffect(() => {\r\n    const kakao = window.kakao;\r\n    const map = mapRef.current;\r\n    const geocoder = geocoderRef.current;\r\n    if (!kakao || !map || !geocoder) return;\r\n\r\n    // 기존 마커 제거\r\n    storeMarkersRef.current.forEach((m) => m.setMap(null));\r\n    storeMarkersRef.current = [];\r\n\r\n    // 마커 이미지(빨간 핀)\r\n    const redPinSVG =\r\n      \"data:image/svg+xml;utf8,\" +\r\n      encodeURIComponent(\r\n        `<svg width=\"24\" height=\"34\" viewBox=\"0 0 24 34\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <defs><filter id=\"s\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\"><feDropShadow dx=\"0\" dy=\"1\" stdDeviation=\"1\" flood-opacity=\".25\"/></filter></defs>\r\n          <path d=\"M12 33c5-8 10-12 10-19A10 10 0 1 0 2 14c0 7 5 11 10 19z\" fill=\"#ef4444\" filter=\"url(#s)\"/>\r\n          <circle cx=\"12\" cy=\"12\" r=\"4.2\" fill=\"white\"/>\r\n        </svg>`\r\n      );\r\n    const redImg = new kakao.maps.MarkerImage(\r\n      redPinSVG,\r\n      new kakao.maps.Size(24, 34),\r\n      { offset: new kakao.maps.Point(12, 34) }\r\n    );\r\n\r\n    // 클릭 핸들러\r\n    const attachClick = (marker, s) => {\r\n      kakao.maps.event.addListener(marker, \"click\", () => {\r\n        // 강조 마커 숨기기\r\n        hideFocusMarker();\r\n\r\n        const lat = Number(s.latitude);\r\n        const lng = Number(s.longitude);\r\n        if (!Number.isFinite(lat) || !Number.isFinite(lng)) return;\r\n\r\n        // 역지오코딩 → 도로명/지번\r\n        geocoder.coord2Address(lng, lat, (res, status) => {\r\n          let road = \"\",\r\n            jibun = \"\";\r\n          if (status === kakao.maps.services.Status.OK && res?.[0]) {\r\n            road =\r\n              res.find((r) => r.road_address)?.road_address?.address_name || \"\";\r\n            jibun = res[0]?.address?.address_name || \"\";\r\n          }\r\n\r\n          // 부모로 알림\r\n          onMissionSelectRef.current?.({\r\n            mission: null,\r\n            store: s,\r\n            lat,\r\n            lng,\r\n            address: { road, jibun },\r\n          });\r\n        });\r\n      });\r\n    };\r\n\r\n    // 마커 생성\r\n    for (const s of stores) {\r\n      const lat = Number(s.latitude);\r\n      const lng = Number(s.longitude);\r\n      if (!Number.isFinite(lat) || !Number.isFinite(lng)) continue;\r\n\r\n      const pos = new kakao.maps.LatLng(lat, lng);\r\n\r\n      // joinable 미션이 있는 매장은 빨간 마커\r\n      const isHot = hotStoreIds.has(Number(s.id));\r\n      const marker = new kakao.maps.Marker({\r\n        position: pos,\r\n        map,\r\n        title: s.storeName || s.name || `매장#${s.id}`,\r\n        zIndex: isHot ? 3 : 2,\r\n        ...(isHot ? { image: redImg } : {}),\r\n      });\r\n\r\n      attachClick(marker, s);\r\n      storeMarkersRef.current.push(marker);\r\n    }\r\n  }, [stores, hotStoreIds]);\r\n\r\n  // 4-A) /map?storeId=... → 해당 위치로 이동 (강조 마커 없음)\r\n  useEffect(() => {\r\n    const kakao = window.kakao;\r\n    const map = mapRef.current;\r\n    if (!kakao || !map || !storeIdToFocus) return;\r\n\r\n    (async () => {\r\n      try {\r\n        const { data } = await api.get(`/itda/stores/${storeIdToFocus}`);\r\n        const toNum = (v) =>\r\n          v === null || v === undefined || v === \"\" ? undefined : Number(v);\r\n        const lat = toNum(data?.latitude);\r\n        const lng = toNum(data?.longitude);\r\n        if (!Number.isFinite(lat) || !Number.isFinite(lng)) return;\r\n\r\n        const pos = new kakao.maps.LatLng(lat, lng);\r\n        map.panTo(pos);\r\n\r\n        // ✅ 파란(기본) 강조 마커를 생성/표시하지 않음\r\n        // 혹시 이전에 남아있을 수 있는 강조 마커가 있다면 숨김\r\n        hideFocusMarker();\r\n      } catch (e) {\r\n        console.warn(\"store focus failed:\", e?.response?.data || e);\r\n      }\r\n    })();\r\n\r\n    // 타이머 정리만 남김\r\n    return () => {\r\n      if (focusHideTimerRef.current) {\r\n        clearTimeout(focusHideTimerRef.current);\r\n        focusHideTimerRef.current = null;\r\n      }\r\n    };\r\n  }, [storeIdToFocus, mapReady]); // ✅ mapReady 추가로 초기화 후에도 재실행됨\r\n\r\n  // 4-B) 리스트/상세에서 좌표 전달 시 → 강조 마커 즉시 숨김 + 지도 이동 (마커 생성 없음)\r\n  useEffect(() => {\r\n    const kakao = window.kakao;\r\n    const map = mapRef.current;\r\n    if (!kakao || !map || !focus) return;\r\n\r\n    hideFocusMarker();\r\n\r\n    const lat = Number(focus.lat);\r\n    const lng = Number(focus.lng);\r\n    if (!Number.isFinite(lat) || !Number.isFinite(lng)) return;\r\n\r\n    const pos = new kakao.maps.LatLng(lat, lng);\r\n    map.panTo(pos);\r\n  }, [focus]);\r\n\r\n  return (\r\n    <div className=\"map_wrap\">\r\n      <div id=\"map\" ref={containerRef} className=\"map_canvas\" />\r\n      <div className=\"hAddr\">\r\n        <span className=\"title\">지도중심기준 행정동 주소정보</span>\r\n        <span id=\"centerAddr\" ref={centerAddrRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// src/features/eventMap/map/Location.js\r\nexport default function getCurrentLocation(onSuccess, onError) {\r\n  if (!navigator.geolocation) {\r\n    onError?.(new Error(\"Geolocation not supported\"));\r\n    return;\r\n  }\r\n  navigator.geolocation.getCurrentPosition(\r\n    (pos) => onSuccess(pos.coords.latitude, pos.coords.longitude),\r\n    (err) => {\r\n      console.error(\"위치 정보 에러:\", err);\r\n      onError?.(err); // ⚠️ 실패해도 반드시 콜백 호출\r\n    },\r\n    { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\r\n  );\r\n}\r\n","// src/features/eventMap/eventList/EventList.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"../../../api\";\r\nimport \"./EventList.css\";\r\n\r\nfunction EventList({ storeId, address, onPickMission }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const [store, setStore] = useState(null);\r\n  const [summary, setSummary] = useState(\"\");\r\n\r\n  const [avgRating, setAvgRating] = useState(null);\r\n  const [reviewCount, setReviewCount] = useState(null);\r\n\r\n  const [ongoing, setOngoing] = useState([]);\r\n  const [missionsErr, setMissionsErr] = useState(\"\");\r\n\r\n  // ---- utils\r\n  const toNum = (v) => {\r\n    if (v === null || v === undefined || v === \"\") return undefined;\r\n    const n = typeof v === \"number\" ? v : Number(v);\r\n    return Number.isFinite(n) ? n : undefined;\r\n  };\r\n  const toDate = (v) => {\r\n    if (v === null || v === undefined || v === \"\") return null;\r\n    if (typeof v === \"number\") {\r\n      const ms = v > 1e12 ? v : v * 1000;\r\n      const d = new Date(ms);\r\n      return isNaN(d) ? null : d;\r\n    }\r\n    const d = new Date(String(v));\r\n    return isNaN(d) ? null : d;\r\n  };\r\n  const fmtDate = (d) => {\r\n    const DT = toDate(d);\r\n    return DT ? DT.toISOString().slice(0, 10) : \"-\";\r\n  };\r\n  const isOngoing = (m, now = new Date()) => {\r\n    const s = toDate(m.startAt || m.startDate);\r\n    const e = toDate(m.endAt || m.endDate);\r\n    if (s && s > now) return false;\r\n    if (e && e < now) return false;\r\n    return true;\r\n  };\r\n  const stars = (n) => {\r\n    const v = Math.max(0, Math.min(5, Math.floor(Number(n) || 0)));\r\n    return \"★\".repeat(v) + \"☆\".repeat(5 - v);\r\n  };\r\n\r\n  // ✅ 서버에서 내려온 요약 문자열만 처리\r\n  const normalizeSummary = (s) => {\r\n    if (!s) return \"\";\r\n    s = String(s).trim();\r\n\r\n    // 기본 안내 문구는 그대로 노출\r\n    if (/요약 결과 없음|리뷰가 하나도 없습니다/.test(s)) return s;\r\n\r\n    // HTML/태그, 에러 문구 패턴이면 표시하지 않음\r\n    const looksHtml = /^</.test(s) || /<\\/?[a-z][\\s\\S]*>/i.test(s);\r\n    const looksError = /(오류|error|exception|fail(ed)?)/i.test(s);\r\n    if (!s || looksHtml || looksError) return \"\";\r\n\r\n    // 너무 길면 자르기\r\n    if (s.length > 180) s = s.slice(0, 180).trim() + \"…\";\r\n    return s;\r\n  };\r\n\r\n  // 리뷰 메타(평균/개수)\r\n  const fetchReviewMeta = async (sid) => {\r\n    const tryCalls = [\r\n      async () => (await api.get(`/itda/stores/${encodeURIComponent(sid)}/reviews/summary`)).data, // ✅ 경로 변경\r\n      async () => (await api.get(`/itda/stores/${encodeURIComponent(sid)}/stats`)).data,\r\n      async () => (await api.get(`/itda/stores/${encodeURIComponent(sid)}/rating`)).data,\r\n    ];\r\n    for (const call of tryCalls) {\r\n      try {\r\n        const res = await call();\r\n        const avg = res?.avgRating ?? res?.averageRating ?? res?.avg ?? res?.rating ?? null;\r\n        const count =\r\n          res?.totalReviews ?? res?.reviewsCount ?? res?.count ?? res?.total ?? res?.reviewCount ?? null;\r\n        if (typeof avg === \"number\" || typeof count === \"number\") {\r\n          return {\r\n            avg: typeof avg === \"number\" ? avg : null,\r\n            count: typeof count === \"number\" ? count : null,\r\n          };\r\n        }\r\n      } catch {}\r\n    }\r\n    // fallback 계산\r\n    try {\r\n      const { data } = await api.get(\"/itda/reviews\", {\r\n        params: { storeId: sid, status: \"APPROVED\" },\r\n      });\r\n      const rows = Array.isArray(data) ? data : data?.items || data?.content || [];\r\n      if (!rows.length) return { avg: null, count: 0 };\r\n      const sum = rows.reduce((acc, r) => {\r\n        const raw = r.rating ?? r.stars ?? 0;\r\n        const num = typeof raw === \"number\" ? raw : Number(raw) || 0;\r\n        return acc + num;\r\n      }, 0);\r\n      const avg = Math.round((sum / rows.length) * 10) / 10;\r\n      return { avg, count: rows.length };\r\n    } catch {\r\n      return { avg: null, count: null };\r\n    }\r\n  };\r\n\r\n  // ---- data fetch\r\n  useEffect(() => {\r\n    let alive = true;\r\n\r\n    const reset = () => {\r\n      setStore(null);\r\n      setSummary(\"\");\r\n      setAvgRating(null);\r\n      setReviewCount(null);\r\n      setOngoing([]);\r\n      setErr(\"\");\r\n      setMissionsErr(\"\");\r\n    };\r\n\r\n    const fetchAll = async (sid) => {\r\n      setLoading(true);\r\n      setErr(\"\");\r\n      try {\r\n        // 1) store detail\r\n        const { data: storeData } = await api.get(`/itda/stores/${encodeURIComponent(sid)}`);\r\n        if (!alive) return;\r\n        setStore(storeData || null);\r\n\r\n        // 2) summary (JSON 응답에서 summary만 꺼내기) + ✅ 정리\r\n        try {\r\n          const { data } = await api.get(`/itda/stores/${encodeURIComponent(sid)}/reviews/summary`);\r\n          const text = normalizeSummary(data?.summary);\r\n          if (alive) setSummary(text);\r\n        } catch {\r\n          if (alive) setSummary(\"\");\r\n        }\r\n\r\n        // 3) 리뷰 메타\r\n        try {\r\n          const meta = await fetchReviewMeta(sid);\r\n          if (alive) {\r\n            setAvgRating(typeof meta.avg === \"number\" ? Math.round(meta.avg * 10) / 10 : null);\r\n            setReviewCount(typeof meta.count === \"number\" ? meta.count : null);\r\n          }\r\n        } catch {\r\n          if (alive) {\r\n            setAvgRating(null);\r\n            setReviewCount(null);\r\n          }\r\n        }\r\n\r\n        // 4) 진행중 미션\r\n        try {\r\n          const { data: msData } = await api.get(`/itda/missions`, {\r\n            params: { storeId: sid },\r\n          });\r\n          const list = Array.isArray(msData) ? msData : msData?.items || [];\r\n          const now = new Date();\r\n          const flat = list\r\n            .filter((m) => isOngoing(m, now))\r\n            .map((m) => ({\r\n              id: m.id ?? m.missionId,\r\n              title: m.title || \"미션\",\r\n              start: m.startAt || m.startDate || null,\r\n              end: m.endAt || m.endDate || null,\r\n              _raw: m,\r\n            }));\r\n          if (alive) setOngoing(flat);\r\n        } catch (e) {\r\n          if (alive) {\r\n            setOngoing([]);\r\n            setMissionsErr(e?.response?.data?.message || \"미션 정보를 불러오지 못했습니다.\");\r\n          }\r\n        }\r\n      } catch (e) {\r\n        if (alive) {\r\n          setErr(e?.response?.data?.message || \"매장 정보를 불러오지 못했습니다.\");\r\n          setStore(null);\r\n          setSummary(\"\");\r\n          setAvgRating(null);\r\n          setReviewCount(null);\r\n          setOngoing([]);\r\n        }\r\n      } finally {\r\n        if (alive) setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (!storeId) {\r\n      reset();\r\n      return;\r\n    }\r\n    fetchAll(storeId);\r\n\r\n    return () => {\r\n      alive = false;\r\n    };\r\n  }, [storeId]);\r\n\r\n  const storeName = store?.storeName || store?.name || \"-\";\r\n  const storeAddress =\r\n    address?.road ||\r\n    store?.roadAddress ||\r\n    store?.address ||\r\n    store?.jibunAddress ||\r\n    address?.jibun ||\r\n    \"-\";\r\n\r\n  // 리스트 미션 클릭 → 상위로 전달\r\n  const handlePick = (m) => {\r\n    if (!onPickMission || !m?._raw) return;\r\n    const lat =\r\n      toNum(store?.latitude) ??\r\n      toNum(store?.lat) ??\r\n      toNum(m?._raw?.store?.latitude) ??\r\n      toNum(m?._raw?.latitude);\r\n    const lng =\r\n      toNum(store?.longitude) ??\r\n      toNum(store?.lng) ??\r\n      toNum(m?._raw?.store?.longitude) ??\r\n      toNum(m?._raw?.longitude);\r\n\r\n    onPickMission({\r\n      mission: m._raw,\r\n      lat,\r\n      lng,\r\n      address,\r\n      store,\r\n    });\r\n  };\r\n\r\n  const reviewCountLabel = typeof reviewCount === \"number\" ? String(reviewCount) : \"-\";\r\n  const hasSummary = !!summary;\r\n\r\n  return (\r\n    <div className=\"event-list\" role=\"region\" aria-label=\"매장 정보\">\r\n      {!storeId && <div className=\"event-list-empty\">마커를 눌러 매장을 선택하세요.</div>}\r\n      {storeId && loading && <div className=\"event-list-empty\">불러오는 중...</div>}\r\n      {storeId && !loading && err && <div className=\"event-list-error\">{err}</div>}\r\n\r\n      {storeId && !loading && !err && (\r\n        <div className=\"store-panel\">\r\n          {/* 매장 기본 정보 */}\r\n          <div className=\"store-head\">\r\n            <div className=\"store-name\">{storeName}</div>\r\n            <div className=\"store-addr\">{storeAddress}</div>\r\n\r\n            <div\r\n              className=\"store-stars\"\r\n              aria-label={avgRating != null ? `평균 별점 ${avgRating}점` : \"평균 별점 없음\"}\r\n            >\r\n              {avgRating != null ? (\r\n                <>\r\n                  <strong className=\"store-stars-num\">{avgRating}</strong>\r\n                  <span className=\"store-stars-badge\">{stars(avgRating)}</span>\r\n                </>\r\n              ) : (\r\n                \"평균 별점 정보 없음\"\r\n              )}\r\n            </div>\r\n\r\n            {/* 리뷰 요약 | 리뷰 개수 : N */}\r\n            <div className=\"store-review-quick\">\r\n              리뷰 요약 {hasSummary ? \"\" : \"(없음)\"} {\" \"} | {\" \"} 리뷰 개수 : {reviewCountLabel}\r\n            </div>\r\n\r\n            {hasSummary && (\r\n              <div className=\"store-summary\" title={summary}>\r\n                {summary}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* 구분선 */}\r\n          <div className=\"store-divider\" />\r\n\r\n          {/* 진행 중 미션 */}\r\n          <div className=\"store-missions\">\r\n            <div className=\"store-missions-title\">진행 중인 미션</div>\r\n\r\n            {missionsErr && <div className=\"event-list-error\">{missionsErr}</div>}\r\n\r\n            {!missionsErr && ongoing.length === 0 && (\r\n              <div className=\"event-list-empty store-missions-empty\">\r\n                현재 진행 중인 미션이 없습니다.\r\n              </div>\r\n            )}\r\n\r\n            {!missionsErr && ongoing.length > 0 && (\r\n              <ul className=\"store-mission-list\">\r\n                {ongoing.map((m) => (\r\n                  <li\r\n                    key={m.id}\r\n                    className=\"store-mission-item\"\r\n                    onClick={() => handlePick(m)}\r\n                    onKeyDown={(e) => e.key === \"Enter\" && handlePick(m)}\r\n                    role=\"button\"\r\n                    tabIndex={0}\r\n                    title={m.title}\r\n                    aria-label={`${m.title} 선택`}\r\n                  >\r\n                    <div className=\"store-mission-title\">{m.title}</div>\r\n                    <div className=\"store-mission-dates\">\r\n                      {fmtDate(m.start)} ~ {fmtDate(m.end)}\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventList;\r\n","// src/features/eventMap/eventContent/EventContent.js\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useNavigate, useLocation, useOutletContext } from \"react-router-dom\";\r\nimport api, { BASE_URL } from \"../../../api\";\r\nimport \"./EventContent.css\";\r\n\r\nexport default function EventContent({ selected, loginRoute = \"/login\" }) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const outletCtx = useOutletContext();\r\n  const authUser = outletCtx?.user || null;\r\n\r\n  // ── 모달 & 리뷰 상태 (가게 전체 리뷰 전용)\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [reviewsLoading, setReviewsLoading] = useState(false);\r\n  const [reviewsErr, setReviewsErr] = useState(\"\");\r\n\r\n  // ── 이미지 뷰어(라이트박스)\r\n  const [viewerOpen, setViewerOpen] = useState(false);\r\n  const [viewerReviewIdx, setViewerReviewIdx] = useState(0);\r\n  const [viewerImageIdx, setViewerImageIdx] = useState(0);\r\n\r\n  // ── 리뷰 본문 펼침/접힘 상태 (id 기반)\r\n  const [expandedReviews, setExpandedReviews] = useState(() => new Set());\r\n  const toggleReviewExpand = (id) => {\r\n    setExpandedReviews((prev) => {\r\n      const next = new Set(prev);\r\n      if (next.has(id)) next.delete(id);\r\n      else next.add(id);\r\n      return next;\r\n    });\r\n  };\r\n\r\n  // ── 파생값 (selected 없어도 안전)\r\n  const mission = selected?.mission || selected || {};\r\n  const store = mission?.store || selected?.store || {};\r\n\r\n  const poster =\r\n    mission.imgUrl ||\r\n    mission.posterUrl ||\r\n    mission.poster ||\r\n    mission.imageUrl ||\r\n    mission.thumbnailUrl ||\r\n    \"\";\r\n\r\n  const title = mission.title || \"미션\";\r\n  const desc = mission.description || mission.desc || \"\";\r\n  const start = mission.startAt || mission.startDate || \"\";\r\n  const end = mission.endAt || mission.endDate || \"\";\r\n  const rewardContent = mission.rewardContent || mission.rewardName || \"\";\r\n\r\n  const reward =\r\n    mission.rewardRemainingCount ??\r\n    mission.rewardCount ??\r\n    mission.reward ??\r\n    mission.quantity ??\r\n    mission.rewardQty ??\r\n    null;\r\n\r\n  const storeName = store.storeName || store.name || mission.storeName || \"-\";\r\n  const storeAddr =\r\n    selected?.address?.road ||\r\n    store.address ||\r\n    mission.address ||\r\n    selected?.address?.jibun ||\r\n    \"-\";\r\n\r\n  const missionId =\r\n    mission.id ??\r\n    mission.missionId ??\r\n    mission.missionID ??\r\n    selected?.id ??\r\n    selected?.missionId ??\r\n    selected?.missionID ??\r\n    null;\r\n\r\n  const storeId =\r\n    store.id ??\r\n    store.storeId ??\r\n    mission.storeId ??\r\n    mission.store?.id ??\r\n    selected?.storeId ??\r\n    null;\r\n\r\n  const fmtDate = (d) => {\r\n    if (!d) return \"-\";\r\n    try {\r\n      const dt = new Date(d);\r\n      if (!isNaN(dt)) return dt.toISOString().slice(0, 10);\r\n    } catch {}\r\n    return String(d).slice(0, 10);\r\n  };\r\n\r\n  const goToReview = () => {\r\n    if (!missionId) {\r\n      alert(\"미션 ID가 없어 리뷰 페이지로 이동할 수 없습니다.\");\r\n      return;\r\n    }\r\n    const reviewPath = `/review?missionId=${encodeURIComponent(missionId)}`;\r\n    if (!authUser) {\r\n      navigate(`${loginRoute}?next=${encodeURIComponent(reviewPath)}`);\r\n      return;\r\n    }\r\n    navigate(reviewPath, {\r\n      state: {\r\n        missionId,\r\n        title,\r\n        storeName,\r\n        storeAddr,\r\n        from: location.pathname + location.search,\r\n      },\r\n    });\r\n  };\r\n\r\n  const openModal = () => {\r\n    if (!storeId) {\r\n      alert(\"매장 ID를 확인할 수 없습니다.\");\r\n      return;\r\n    }\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // ───────── helpers: 이미지 URL 절대주소화\r\n  const makeAbsoluteUrl = (u) => {\r\n    if (!u) return \"\";\r\n    const s = String(u).trim();\r\n    if (!s) return \"\";\r\n    if (/^(https?:)?\\/\\//i.test(s) || /^data:image\\//i.test(s)) return s;\r\n    const base = (BASE_URL || \"\").trim();\r\n    const origin = typeof window !== \"undefined\" ? window.location.origin : \"\";\r\n    const prefix = base || origin || \"\";\r\n    return `${prefix.replace(/\\/+$/, \"\")}/${s.replace(/^\\/+/, \"\")}`;\r\n  };\r\n\r\n  // 리뷰 정규화: 이미지들까지 추출 + 절대URL 변환\r\n  const normalizeReview = (r) => {\r\n    const userName =\r\n      r.userName || r.username || r.nickname || r.user?.name || \"사용자\";\r\n    const ratingRaw = r.rating ?? r.stars ?? 0;\r\n    const rating =\r\n      typeof ratingRaw === \"number\" ? ratingRaw : Number(ratingRaw) || 0;\r\n    const text = r.text ?? r.content ?? \"\";\r\n    const id =\r\n      r.id ?? r.reviewId ?? r._id ?? Math.random().toString(36).slice(2);\r\n\r\n    let images = [];\r\n    if (Array.isArray(r.images)) images = r.images.filter(Boolean);\r\n    else if (Array.isArray(r.photos)) images = r.photos.filter(Boolean);\r\n    else if (Array.isArray(r.imgUrls)) images = r.imgUrls.filter(Boolean);\r\n    else if (r.imgUrl || r.imageUrl || r.photoUrl) {\r\n      images = [r.imgUrl || r.imageUrl || r.photoUrl].filter(Boolean);\r\n    }\r\n\r\n    const abs = Array.from(\r\n      new Set(images.map((u) => makeAbsoluteUrl(u)).filter(Boolean))\r\n    );\r\n\r\n    return { id, userName, rating, text, images: abs };\r\n  };\r\n\r\n  // 🔎 모달 오픈 시, 가게 전체 리뷰 로드 (/itda/reviews?storeId=...)\r\n  useEffect(() => {\r\n    if (!modalOpen || !storeId) return;\r\n    let alive = true;\r\n    (async () => {\r\n      setReviewsLoading(true);\r\n      setReviewsErr(\"\");\r\n      try {\r\n        const { data } = await api.get(\"/itda/reviews\", { params: { storeId } });\r\n        const rows = Array.isArray(data)\r\n          ? data\r\n          : data?.items || data?.content || [];\r\n        if (!alive) return;\r\n        const normalized = rows.map(normalizeReview);\r\n        setReviews(normalized);\r\n\r\n        // 텍스트가 짧은 리뷰는 초기에 펼침 버튼을 숨기고 싶다면 여기서 처리 가능\r\n        // (현재는 모두 접힘 상태로 시작)\r\n        setExpandedReviews(new Set()); \r\n      } catch (e) {\r\n        if (!alive) return;\r\n        setReviews([]);\r\n        setReviewsErr(\r\n          e?.response?.data?.message || \"리뷰를 불러오지 못했습니다.\"\r\n        );\r\n      } finally {\r\n        if (alive) setReviewsLoading(false);\r\n      }\r\n    })();\r\n    return () => {\r\n      alive = false;\r\n    };\r\n  }, [modalOpen, storeId]);\r\n\r\n  // 뷰어 열기/닫기/이동\r\n  const openViewerFor = (reviewIdx, imageIdx = 0) => {\r\n    const r = reviews[reviewIdx];\r\n    if (!r || !Array.isArray(r.images) || r.images.length === 0) return;\r\n    setViewerReviewIdx(reviewIdx);\r\n    setViewerImageIdx(Math.max(0, Math.min(imageIdx, r.images.length - 1)));\r\n    setViewerOpen(true);\r\n  };\r\n\r\n  const closeViewer = () => setViewerOpen(false);\r\n\r\n  const currentImages = useMemo(() => {\r\n    const r = reviews[viewerReviewIdx];\r\n    return Array.isArray(r?.images) ? r.images : [];\r\n  }, [reviews, viewerReviewIdx]);\r\n\r\n  const prevViewerImage = () => {\r\n    if (!currentImages.length) return;\r\n    setViewerImageIdx((i) => (i - 1 + currentImages.length) % currentImages.length);\r\n  };\r\n  const nextViewerImage = () => {\r\n    if (!currentImages.length) return;\r\n    setViewerImageIdx((i) => (i + 1) % currentImages.length);\r\n  };\r\n\r\n  const hasMission = !!missionId;\r\n\r\n  // 선택 전: 안내\r\n  if (!selected) {\r\n    return (\r\n      <div className=\"event-detail empty\">\r\n        <span className=\"placeholder\">매장을 선택해주세요.</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"event-detail\">\r\n      {/* 우상단: 매장 리뷰 보기 */}\r\n      <div className=\"event-floating-actions\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"event-btn ghost\"\r\n          onClick={openModal}\r\n          disabled={!storeId}\r\n          title={storeId ? \"이 매장의 리뷰 보기\" : \"매장 정보가 없습니다\"}\r\n        >\r\n          매장 리뷰 보기\r\n        </button>\r\n      </div>\r\n\r\n      {/* 좌측 포스터 */}\r\n      <div className=\"poster-col\">\r\n        {poster ? (\r\n          <img\r\n            src={makeAbsoluteUrl(poster)}\r\n            alt={`${title} 포스터`}\r\n            className=\"poster-img\"\r\n            onError={(e) => {\r\n              e.currentTarget.style.display = \"none\";\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"poster-placeholder\">포스터 없음</div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 우측 정보 */}\r\n      <div className=\"info-col\">\r\n        <div className=\"title\">{hasMission ? title : storeName}</div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">기간</span>\r\n          <span className=\"value\">\r\n            {hasMission ? (\r\n              <>\r\n                {fmtDate(start)} ~ {fmtDate(end)}\r\n              </>\r\n            ) : (\r\n              <>-</>\r\n            )}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">보상 내용</span>\r\n          <span className=\"value\">\r\n            {hasMission ? rewardContent || \"-\" : \"-\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">보상 수량</span>\r\n          <span className=\"value\">{hasMission ? reward ?? \"-\" : \"-\"}</span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">매장명</span>\r\n          <span className=\"value\">{storeName}</span>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <span className=\"label\">주소</span>\r\n          <span className=\"value\">{storeAddr}</span>\r\n        </div>\r\n\r\n        {hasMission ? (\r\n          desc && (\r\n            <div className=\"desc\">\r\n              <div className=\"label\">설명</div>\r\n              <div className=\"value\">{desc}</div>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"desc\">\r\n            <div className=\"label\">안내</div>\r\n            <div className=\"value\">현재 가능한 미션이 없습니다.</div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"actions\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"event-btn primary\"\r\n            onClick={goToReview}\r\n            disabled={!missionId}\r\n            title={\r\n              missionId\r\n                ? \"이 미션에 대한 리뷰 작성\"\r\n                : \"미션 ID가 없어 이동할 수 없습니다\"\r\n            }\r\n          >\r\n            리뷰 작성\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 리뷰 모달 (가게 전체 리뷰) */}\r\n      {modalOpen && (\r\n        <div\r\n          className=\"rv-modal-backdrop\"\r\n          onClick={() => setModalOpen(false)}\r\n        >\r\n          <div className=\"rv-modal\" onClick={(e) => e.stopPropagation()}>\r\n            {/* 헤더 */}\r\n            <div className=\"rv-modal-head\">\r\n              <strong>매장 리뷰 보기</strong>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setModalOpen(false)}\r\n                className=\"event-btn ghost\"\r\n              >\r\n                닫기\r\n              </button>\r\n            </div>\r\n\r\n            {/* 본문 */}\r\n            <div className=\"rv-modal-body\">\r\n              {reviewsLoading && reviews.length === 0 ? (\r\n                <div style={{ color: \"#666\" }}>리뷰 불러오는 중…</div>\r\n              ) : reviewsErr ? (\r\n                <div style={{ color: \"#c00\" }}>{reviewsErr}</div>\r\n              ) : reviews.length === 0 ? (\r\n                <div style={{ color: \"#666\" }}>표시할 리뷰가 없습니다.</div>\r\n              ) : (\r\n                <div className=\"rv-review-list\">\r\n                  {reviews.map((r, ri) => {\r\n                    const isExpanded = expandedReviews.has(r.id);\r\n                    return (\r\n                      <article\r\n                        key={r.id}\r\n                        className={`rv-review-card ${r.images?.length ? \"rv-clickable\" : \"\"}`}\r\n                        onClick={() => r.images?.length && openViewerFor(ri, 0)}\r\n                        title={r.images?.length ? \"이미지를 크게 보기\" : undefined}\r\n                      >\r\n                        <div className=\"rv-review-top\">\r\n                          <strong className=\"rv-review-name\">{r.userName}</strong>\r\n                          <span className=\"rv-review-stars\" aria-label={`별점 ${r.rating}점`}>\r\n                            {\"★\".repeat(Math.max(0, Math.floor(r.rating || 0)))}\r\n                            {\"☆\".repeat(Math.max(0, 5 - Math.floor(r.rating || 0)))}\r\n                          </span>\r\n                        </div>\r\n\r\n                        {r.text && (\r\n                          <div className={`rv-review-text-wrap ${isExpanded ? \"expanded\" : \"collapsed\"}`}>\r\n                            <p\r\n                              id={`rv-text-${r.id}`}\r\n                              className={`rv-review-text ${isExpanded ? \"\" : \"clamp-3\"}`}\r\n                            >\r\n                              {r.text}\r\n                            </p>\r\n\r\n                            {/* 접힘일 때 시각적 힌트 (페이드) */}\r\n                            {!isExpanded && <div className=\"rv-fade-tail\" aria-hidden />}\r\n\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"rv-more-btn\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation(); // 카드 onClick과 분리\r\n                                toggleReviewExpand(r.id);\r\n                              }}\r\n                              aria-expanded={isExpanded}\r\n                              aria-controls={`rv-text-${r.id}`}\r\n                              title={isExpanded ? \"접기\" : \"자세히 보기\"}\r\n                            >\r\n                              {isExpanded ? \"접기\" : \"자세히 보기\"}\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n\r\n                        {Array.isArray(r.images) && r.images.length > 0 && (\r\n                          <div className=\"rv-images-grid\">\r\n                            {r.images.map((src, i) => (\r\n                              <img\r\n                                key={i}\r\n                                src={src}\r\n                                alt=\"리뷰 이미지\"\r\n                                className=\"rv-image\"\r\n                                loading=\"lazy\"\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation(); // 카드 onClick과 분리\r\n                                  openViewerFor(ri, i);\r\n                                }}\r\n                                onError={(e) => {\r\n                                  e.currentTarget.style.display = \"none\";\r\n                                }}\r\n                              />\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </article>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 라이트박스(큰 이미지) */}\r\n          {viewerOpen && currentImages.length > 0 && (\r\n            <div\r\n              className=\"rv-viewer-backdrop\"\r\n              onClick={closeViewer}\r\n            >\r\n              <div className=\"rv-viewer\" onClick={(e) => e.stopPropagation()}>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"rv-viewer-close\"\r\n                  aria-label=\"닫기\"\r\n                  onClick={closeViewer}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"rv-viewer-nav left\"\r\n                  aria-label=\"이전 이미지\"\r\n                  onClick={prevViewerImage}\r\n                >\r\n                  ‹\r\n                </button>\r\n                <img\r\n                  src={currentImages[viewerImageIdx]}\r\n                  alt={`리뷰 이미지 ${viewerImageIdx + 1}/${currentImages.length}`}\r\n                  className=\"rv-viewer-img\"\r\n                  onError={(e) => {\r\n                    e.currentTarget.style.display = \"none\";\r\n                  }}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"rv-viewer-nav right\"\r\n                  aria-label=\"다음 이미지\"\r\n                  onClick={nextViewerImage}\r\n                >\r\n                  ›\r\n                </button>\r\n                <div className=\"rv-viewer-count\">\r\n                  {viewerImageIdx + 1} / {currentImages.length}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/features/eventMap/EventMap.js\r\nimport { useState, useCallback } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport KaKaoMap from \"./map/KaKaoMap\";\r\nimport EventList from \"./eventList/EventList\";\r\nimport EventContent from \"./eventContent/EventContent\";\r\nimport \"./EventMap.css\";\r\n\r\nexport default function EventMap() {\r\n  // { mission|null, lat, lng, address?, store? }\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const [params] = useSearchParams();\r\n  const storeIdParam = params.get(\"storeId\");\r\n  const storeIdToFocus = storeIdParam ? Number(storeIdParam) : null;\r\n\r\n  // 지도/리스트에서 “선택”이 발생하면 공통으로 여기로 모음\r\n  const handleMissionSelect = useCallback((payload) => {\r\n    setSelected(payload);\r\n  }, []);\r\n\r\n  // 현재 선택된 매장 id 추출 (지도에서 넘겨준 payload에 들어있음)\r\n  const currentStoreId =\r\n    selected?.store?.id ??\r\n    selected?.store?.storeId ??\r\n    selected?.mission?.store?.id ??\r\n    selected?.mission?.storeId ??\r\n    null;\r\n\r\n  return (\r\n    // ✅ 스코프 클래스 부여: 맵 관련 CSS가 여기 안에서만 적용됨\r\n    <div className=\"itda-eventmap event-page-80\">\r\n      <div className=\"map-list-layout\">\r\n        {/* 왼쪽: 선택 매장 정보 & 진행 중 미션 목록 */}\r\n        <div className=\"list-col\">\r\n          <EventList\r\n            storeId={currentStoreId}\r\n            address={selected?.address}\r\n            // ✅ 리스트에서 미션을 고르면 상세/지도 동기화\r\n            onPickMission={handleMissionSelect}\r\n          />\r\n        </div>\r\n\r\n        {/* 오른쪽: 지도 */}\r\n        <div className=\"map-col\">\r\n          <KaKaoMap\r\n            storeIdToFocus={storeIdToFocus}\r\n            focus={selected} // 리스트/지도 선택 → 지도 중심 이동\r\n            onMissionSelect={handleMissionSelect} // 지도에서 선택 → 하단 상세/리스트 동기화\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* 하단 상세 패널 */}\r\n      <EventContent selected={selected} />\r\n    </div>\r\n  );\r\n}\r\n","// features/map/index.jsx\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport EventMap from \"./EventMap\";\r\n\r\nexport default function MapFeature() {\r\n  return (\r\n    <div data-app=\"map\">\r\n      <Routes>\r\n        <Route index element={<EventMap />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["kakaoLoadingPromise","KAKAO_APP_KEY","KaKaoMap","_ref","onMissionSelect","storeIdToFocus","focus","stores","setStores","useState","hotStoreIds","setHotStoreIds","Set","mapReady","setMapReady","mapRef","useRef","geocoderRef","containerRef","centerAddrRef","initialized","storeMarkersRef","onMissionSelectRef","useEffect","current","focusMarkerRef","focusHideTimerRef","onMapIdleRef","onMapClickRef","onMapDragStartRef","onMapZoomChangedRef","hideFocusMarker","clearTimeout","setMap","kakao","appKey","_window$kakao","window","Promise","reject","Error","maps","resolve","scriptId","existing","document","getElementById","_window$kakao2","addEventListener","once","script","createElement","id","async","src","concat","onload","load","onerror","head","appendChild","loadKakaoMaps","initMapAt","lat","lng","container","map","Map","center","LatLng","level","services","Geocoder","searchAddrFromCoords","coords","cb","_geocoderRef$current","coord2RegionCode","getLng","getLat","displayCenterInfo","result","status","Status","OK","el","i","length","region_type","textContent","address_name","getCenter","event","addListener","onSuccess","onError","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","err","console","error","enableHighAccuracy","timeout","maximumAge","removeListener","forEach","m","setTimeout","relayout","setCenter","alive","data","api","list","Array","isArray","items","toNum","v","undefined","Number","uniq","s","_s$id","storeId","has","set","_objectSpread","from","values","_unused","_m$store$id","_m$store","sid","store","add","_unused2","geocoder","redPinSVG","encodeURIComponent","redImg","MarkerImage","Size","offset","Point","attachClick","marker","isFinite","coord2Address","res","_onMissionSelectRef$c","road","jibun","_res$find","_res$find$road_addres","_res$","_res$$address","find","r","road_address","address","call","mission","isHot","Marker","position","title","storeName","name","zIndex","image","push","panTo","e","_e$response","warn","response","_jsxs","className","children","_jsx","ref","onPickMission","loading","setLoading","setErr","setStore","summary","setSummary","avgRating","setAvgRating","reviewCount","setReviewCount","ongoing","setOngoing","missionsErr","setMissionsErr","n","toDate","d","Date","isNaN","String","fmtDate","DT","toISOString","slice","storeData","text","trim","test","looksHtml","looksError","normalizeSummary","_unused3","meta","tryCalls","_ref2","_ref3","_ref4","_res$avgRating","_ref5","_ref6","_ref7","_ref8","_res$totalReviews","avg","averageRating","rating","count","totalReviews","reviewsCount","total","params","rows","content","sum","reduce","acc","_ref9","_r$rating","raw","stars","Math","round","fetchReviewMeta","_unused4","msData","now","flat","filter","arguments","startAt","startDate","endAt","endDate","isOngoing","_m$id","missionId","start","end","_raw","_e$response$data","message","_e$response2","_e$response2$data","fetchAll","storeAddress","roadAddress","jibunAddress","handlePick","_ref0","_ref1","_toNum","_m$_raw","_m$_raw$store","_m$_raw2","_ref10","_ref11","_toNum2","_m$_raw3","_m$_raw3$store","_m$_raw4","reviewCountLabel","hasSummary","role","_Fragment","max","min","floor","repeat","onClick","onKeyDown","key","tabIndex","EventContent","_mission$rewardRemain","_selected$address","_selected$address2","_mission$id","_ref12","_store$id","_mission$store","selected","loginRoute","navigate","useNavigate","location","useLocation","outletCtx","useOutletContext","authUser","user","modalOpen","setModalOpen","reviews","setReviews","reviewsLoading","setReviewsLoading","reviewsErr","setReviewsErr","viewerOpen","setViewerOpen","viewerReviewIdx","setViewerReviewIdx","viewerImageIdx","setViewerImageIdx","expandedReviews","setExpandedReviews","poster","imgUrl","posterUrl","imageUrl","thumbnailUrl","desc","description","rewardContent","rewardName","reward","rewardRemainingCount","rewardCount","quantity","rewardQty","storeAddr","missionID","dt","makeAbsoluteUrl","u","base","BASE_URL","origin","replace","normalizeReview","_r$user","_ref13","_ref14","_r$text","_ref15","_ref16","_r$id","userName","username","nickname","ratingRaw","reviewId","_id","random","toString","images","Boolean","photos","imgUrls","photoUrl","normalized","openViewerFor","reviewIdx","imageIdx","closeViewer","currentImages","useMemo","hasMission","type","openModal","alert","disabled","alt","currentTarget","style","display","goToReview","reviewPath","state","pathname","search","stopPropagation","color","ri","_r$images","_r$images3","isExpanded","_r$images2","prev","next","delete","prevViewerImage","nextViewerImage","EventMap","_selected$store$id","_selected$store","_selected$store2","_selected$mission","_selected$mission$sto","_selected$mission2","setSelected","useSearchParams","storeIdParam","get","handleMissionSelect","useCallback","payload","currentStoreId","EventList","MapFeature","Routes","Route","index","element","path","Navigate","to"],"sourceRoot":""}