{"version":3,"file":"static/js/864.2abece88.chunk.js","mappings":"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","sources":["features/mainPage/MainPage.js","features/mainPage/index.js"],"sourcesContent":["// src/features/main/MainPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\r\nimport api from \"../../api\";\r\nimport \"./MainPage.css\";\r\n\r\nconst MAP_ROUTE = \"/map\";\r\nconst MANAGE_ROUTE = \"/manage\";\r\nconst PREVIEW_LIMIT = 8;\r\n\r\nexport default function MainPage() {\r\n  const navigate = useNavigate();\r\n  const outletCtx = useOutletContext();\r\n  const user = outletCtx?.user ?? null;\r\n\r\n  const canManageStores = (u) => {\r\n    if (!u) return false;\r\n    const single = (u.role ? String(u.role) : \"\").toUpperCase();\r\n    if (single) return single === \"OWNER\" || single === \"ADMIN\";\r\n    const arr = Array.isArray(u.roles) ? u.roles.map((r) => String(r).toUpperCase()) : [];\r\n    return arr.includes(\"OWNER\") || arr.includes(\"ADMIN\");\r\n  };\r\n\r\n  const handleManageClick = () => {\r\n    if (!user) {\r\n      alert(\"로그인이 필요합니다.\");\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n    if (!canManageStores(user)) {\r\n      alert(\"권한이 없습니다. (리뷰어는 접근할 수 없습니다.)\");\r\n      return;\r\n    }\r\n    navigate(MANAGE_ROUTE);\r\n  };\r\n\r\n  // 1) joinable 미션 → 매장별 미리보기\r\n  const [msLoading, setMsLoading] = useState(true);\r\n  const [msError, setMsError] = useState(\"\");\r\n  const [missionStores, setMissionStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    (async () => {\r\n      try {\r\n        setMsLoading(true);\r\n        setMsError(\"\");\r\n\r\n        const { data } = await api.get(\"/itda/missions/joinable\");\r\n        const list = Array.isArray(data) ? data : data?.items || [];\r\n\r\n        const byStore = new Map();\r\n        for (const m of list) {\r\n          const s = m.store || {};\r\n          const sid = s.id ?? m.storeId;\r\n          if (!sid) continue;\r\n\r\n          const poster =\r\n            m.imgUrl ||\r\n            m.posterUrl ||\r\n            m.poster ||\r\n            m.imageUrl ||\r\n            m.thumbnailUrl ||\r\n            m.iamegUrl || \r\n            \"\";\r\n\r\n          if (!byStore.has(sid)) {\r\n            byStore.set(sid, {\r\n              storeId: sid,\r\n              name: s.name || m.storeName || \"매장\",\r\n              address: s.address || m.address || \"\",\r\n              poster,\r\n              count: 1,\r\n            });\r\n          } else {\r\n            byStore.get(sid).count += 1;\r\n          }\r\n        }\r\n\r\n        const items = Array.from(byStore.values())\r\n          .sort((a, b) => b.count - a.count)\r\n          .slice(0, PREVIEW_LIMIT);\r\n\r\n        if (!alive) return;\r\n        setMissionStores(items);\r\n      } catch (e) {\r\n        if (!alive) return;\r\n        setMsError(e?.response?.data?.message || \"미션/매장 미리보기를 불러오지 못했습니다.\");\r\n        setMissionStores([]);\r\n      } finally {\r\n        if (alive) setMsLoading(false);\r\n      }\r\n    })();\r\n    return () => { alive = false; };\r\n  }, []);\r\n\r\n  const hasMissionStores = missionStores.length > 0;\r\n  const fmtCount = (n) => (n > 99 ? \"99+\" : String(n || 0));\r\n\r\n  return (\r\n    <div className=\"main-wrap\">\r\n      <h2 className=\"main-title\">무엇을 하시겠어요?</h2>\r\n\r\n      {/* 상단: 두 개의 주요 액션 버튼 */}\r\n      <div className=\"main-grid\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"main-card\"\r\n          onClick={() => navigate(MAP_ROUTE)}\r\n          aria-label=\"미션 이벤트 지도 보기\"\r\n        >\r\n          <div className=\"card-emoji\" aria-hidden>🗺️</div>\r\n          <div className=\"card-title\">Itda 이벤트 찾아보기!</div>\r\n          <div className=\"card-desc\">진행 가능한 미션을 지도에서 확인해요.</div>\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"main-card\"\r\n          onClick={handleManageClick}\r\n          aria-label=\"내 매장 관리로 이동\"\r\n        >\r\n          <div className=\"card-emoji\" aria-hidden>🏪</div>\r\n          <div className=\"card-title\">매장 관리</div>\r\n          <div className=\"card-desc\">등록한 매장을 확인하고 편집해요.</div>\r\n        </button>\r\n      </div>\r\n\r\n      {/* 하단: 미션이 올라온 매장 미리보기 */}\r\n      <div className=\"main-sections vertical\">\r\n        <section className=\"home-section\">\r\n          <div className=\"section-header\">\r\n            <h3 className=\"section-title\">미션이 올라온 매장</h3>\r\n            <button type=\"button\" className=\"link-btn\" onClick={() => navigate(MAP_ROUTE)}>\r\n              전체 보기 →\r\n            </button>\r\n          </div>\r\n\r\n          {msLoading && <div className=\"section-empty\">불러오는 중...</div>}\r\n          {!msLoading && msError && <div className=\"section-error\">{msError}</div>}\r\n          {!msLoading && !msError && !hasMissionStores && (\r\n            <div className=\"section-empty\">현재 진행 가능한 미션이 없습니다.</div>\r\n          )}\r\n\r\n          {!msLoading && !msError && hasMissionStores && (\r\n            <ul className=\"store-preview-grid\">\r\n              {missionStores.map((s) => (\r\n                <li\r\n                  key={s.storeId}\r\n                  className=\"store-card\"\r\n                  title={s.name}\r\n                  onClick={() => navigate(`${MAP_ROUTE}?storeId=${encodeURIComponent(s.storeId)}`)}\r\n                >\r\n                  <div className=\"store-thumb\">\r\n                    {s.poster ? (\r\n                      <img src={s.poster} alt=\"포스터\" />\r\n                    ) : (\r\n                      <div className=\"store-thumb-placeholder\">포스터 없음</div>\r\n                    )}\r\n                    <span className=\"badge-count\" aria-label={`진행중 미션 ${s.count}개`}>\r\n                      {fmtCount(s.count)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"store-body\">\r\n                    <div className=\"store-name\">{s.name}</div>\r\n                    {s.address && <div className=\"store-addr\">{s.address}</div>}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// src/features/manageShop/index.js\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\n\r\nexport default function ManageShopFeature() {\r\n  return (\r\n    <div data-app=\"manage-shop\">\r\n      <Routes>\r\n        <Route index element={<MainPage />} />\r\n        <Route path=\"*\" element={<Navigate to=\".\" replace />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["MAP_ROUTE","MANAGE_ROUTE","PREVIEW_LIMIT","MainPage","_outletCtx$user","navigate","useNavigate","outletCtx","useOutletContext","user","msLoading","setMsLoading","useState","msError","setMsError","missionStores","setMissionStores","useEffect","alive","data","api","list","Array","isArray","items","byStore","Map","m","_s$id","s","store","sid","id","storeId","poster","imgUrl","posterUrl","imageUrl","thumbnailUrl","iamegUrl","has","get","count","set","name","storeName","address","from","values","sort","a","b","slice","e","_e$response","_e$response$data","response","message","hasMissionStores","length","_jsxs","className","children","_jsx","type","onClick","handleManageClick","alert","u","single","role","String","toUpperCase","arr","roles","map","r","includes","canManageStores","title","concat","encodeURIComponent","src","alt","n","ManageShopFeature","Routes","Route","index","element","path","Navigate","to","replace"],"sourceRoot":""}